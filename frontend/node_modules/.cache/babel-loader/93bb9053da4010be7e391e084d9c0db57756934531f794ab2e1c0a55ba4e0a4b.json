{"ast":null,"code":"var _jsxFileName = \"/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/contexts/EventContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useCallback, useRef } from 'react';\nimport useWebSocket from '../hooks/useWebSocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventContext = /*#__PURE__*/createContext();\nconst initialState = {\n  events: [],\n  traffic: {},\n  weather: {},\n  parking: {},\n  safety: {}\n};\nconst eventReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_EVENT':\n      return {\n        ...state,\n        events: [action.payload, ...state.events]\n      };\n    case 'CLEAR_EVENTS':\n      return {\n        ...state,\n        events: []\n      };\n    case 'SET_TRAFFIC':\n      return {\n        ...state,\n        traffic: action.payload\n      };\n    case 'SET_WEATHER':\n      return {\n        ...state,\n        weather: action.payload\n      };\n    case 'SET_PARKING':\n      return {\n        ...state,\n        parking: action.payload\n      };\n    case 'SET_SAFETY':\n      return {\n        ...state,\n        safety: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const EventProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(eventReducer, initialState);\n  const idCounter = useRef(0);\n  const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n  const backendPort = process.env.REACT_APP_BACKEND_PORT || 8006;\n  const wsUrl = `${wsProtocol}//${window.location.hostname}:${backendPort}/ws`;\n  const onMessage = useCallback(parsedData => {\n    try {\n      // Ensure parsedData is not undefined or null\n      if (!parsedData) {\n        console.error(\"Received empty WebSocket message data\");\n        return;\n      }\n\n      // Data is already parsed by useWebSocket, just add metadata\n      const newEvent = {\n        ...parsedData,\n        id: idCounter.current++,\n        // Use a counter for unique IDs\n        at: new Date().toLocaleTimeString()\n      };\n      dispatch({\n        type: 'ADD_EVENT',\n        payload: newEvent\n      });\n    } catch (error) {\n      console.error(\"Error processing WebSocket message:\", error);\n      console.error(\"Received data:\", parsedData);\n      // Optionally, dispatch an error event to show in the UI\n      const errorEvent = {\n        id: idCounter.current++,\n        at: new Date().toLocaleTimeString(),\n        type: 'error',\n        title: 'WebSocket Processing Error',\n        payload: {\n          details: `Failed to process message: ${JSON.stringify(parsedData)}`\n        }\n      };\n      dispatch({\n        type: 'ADD_EVENT',\n        payload: errorEvent\n      });\n    }\n  }, [dispatch]);\n  const clearEvents = useCallback(() => {\n    dispatch({\n      type: 'CLEAR_EVENTS'\n    });\n  }, [dispatch]);\n  const {\n    sendMessage,\n    readyState\n  } = useWebSocket(wsUrl, onMessage);\n  const sendAgentAction = useCallback((agent, payload, workflow = null) => {\n    let message;\n    if (workflow) {\n      message = {\n        type: 'message',\n        message_type: 'run_workflow',\n        workflow_name: workflow,\n        data: payload\n      };\n    } else {\n      message = {\n        type: 'message',\n        message_type: agent,\n        data: payload\n      };\n    }\n    console.log('Sending WebSocket message:', message);\n    sendMessage(JSON.stringify(message));\n  }, [sendMessage]);\n  return /*#__PURE__*/_jsxDEV(EventContext.Provider, {\n    value: {\n      state,\n      dispatch,\n      sendMessage,\n      readyState,\n      clearEvents,\n      sendAgentAction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(EventProvider, \"NzVKmsOnyReZFTd/bRliSQslv38=\", false, function () {\n  return [useWebSocket];\n});\n_c = EventProvider;\nexport const useEventContext = () => {\n  _s2();\n  const context = useContext(EventContext);\n  if (!context) {\n    throw new Error('useEventContext must be used within an EventProvider');\n  }\n  return context;\n};\n_s2(useEventContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default EventContext;\nvar _c;\n$RefreshReg$(_c, \"EventProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useCallback","useRef","useWebSocket","jsxDEV","_jsxDEV","EventContext","initialState","events","traffic","weather","parking","safety","eventReducer","state","action","type","payload","EventProvider","children","_s","dispatch","idCounter","wsProtocol","window","location","protocol","backendPort","process","env","REACT_APP_BACKEND_PORT","wsUrl","hostname","onMessage","parsedData","console","error","newEvent","id","current","at","Date","toLocaleTimeString","errorEvent","title","details","JSON","stringify","clearEvents","sendMessage","readyState","sendAgentAction","agent","workflow","message","message_type","workflow_name","data","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useEventContext","_s2","context","Error","$RefreshReg$"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/contexts/EventContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useCallback, useRef } from 'react';\nimport useWebSocket from '../hooks/useWebSocket';\n\nconst EventContext = createContext();\n\nconst initialState = {\n  events: [],\n  traffic: {},\n  weather: {},\n  parking: {},\n  safety: {},\n};\n\nconst eventReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_EVENT':\n      return { ...state, events: [action.payload, ...state.events] };\n    case 'CLEAR_EVENTS':\n      return { ...state, events: [] };\n    case 'SET_TRAFFIC':\n      return { ...state, traffic: action.payload };\n    case 'SET_WEATHER':\n      return { ...state, weather: action.payload };\n    case 'SET_PARKING':\n      return { ...state, parking: action.payload };\n    case 'SET_SAFETY':\n      return { ...state, safety: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const EventProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(eventReducer, initialState);\n  const idCounter = useRef(0);\n\n  const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n  const backendPort = process.env.REACT_APP_BACKEND_PORT || 8006;\n  const wsUrl = `${wsProtocol}//${window.location.hostname}:${backendPort}/ws`;\n\n  const onMessage = useCallback((parsedData) => {\n    try {\n      // Ensure parsedData is not undefined or null\n      if (!parsedData) {\n        console.error(\"Received empty WebSocket message data\");\n        return;\n      }\n\n      // Data is already parsed by useWebSocket, just add metadata\n      const newEvent = {\n        ...parsedData,\n        id: idCounter.current++, // Use a counter for unique IDs\n        at: new Date().toLocaleTimeString(),\n      };\n\n      dispatch({ type: 'ADD_EVENT', payload: newEvent });\n    } catch (error) {\n      console.error(\"Error processing WebSocket message:\", error);\n      console.error(\"Received data:\", parsedData);\n      // Optionally, dispatch an error event to show in the UI\n      const errorEvent = {\n        id: idCounter.current++,\n        at: new Date().toLocaleTimeString(),\n        type: 'error',\n        title: 'WebSocket Processing Error',\n        payload: { details: `Failed to process message: ${JSON.stringify(parsedData)}` },\n      };\n      dispatch({ type: 'ADD_EVENT', payload: errorEvent });\n    }\n  }, [dispatch]);\n\n  const clearEvents = useCallback(() => {\n    dispatch({ type: 'CLEAR_EVENTS' });\n  }, [dispatch]);\n\n  const { sendMessage, readyState } = useWebSocket(wsUrl, onMessage);\n\n  const sendAgentAction = useCallback((agent, payload, workflow = null) => {\n    let message;\n    if (workflow) {\n      message = {\n        type: 'message',\n        message_type: 'run_workflow',\n        workflow_name: workflow,\n        data: payload,\n      };\n    } else {\n      message = {\n        type: 'message',\n        message_type: agent,\n        data: payload,\n      };\n    }\n    console.log('Sending WebSocket message:', message);\n    sendMessage(JSON.stringify(message));\n  }, [sendMessage]);\n\n  return (\n    <EventContext.Provider value={{ state, dispatch, sendMessage, readyState, clearEvents, sendAgentAction }}>\n      {children}\n    </EventContext.Provider>\n  );\n};\n\nexport const useEventContext = () => {\n  const context = useContext(EventContext);\n  if (!context) {\n    throw new Error('useEventContext must be used within an EventProvider');\n  }\n  return context;\n};\n\nexport default EventContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}