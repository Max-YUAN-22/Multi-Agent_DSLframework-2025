{"ast":null,"code":"// frontend/src/components/WebSocketService.js\nclass WebSocketService {\n  constructor() {\n    this.socket = null;\n    this.onConnectCallback = null;\n    this.onDisconnectCallback = null;\n    this.onMessageCallback = null;\n    this.onErrorCallback = null;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectDelay = 1000;\n  }\n  connect(url) {\n    if (this.socket) {\n      this.socket.close();\n    }\n\n    // 使用原生WebSocket连接\n    const wsUrl = url.replace('http://', 'ws://') + '/socket.io/?EIO=3&transport=websocket';\n    console.log('Connecting to:', wsUrl);\n    this.socket = new WebSocket(wsUrl);\n    this.socket.onopen = () => {\n      console.log('WebSocket connected');\n      this.reconnectAttempts = 0;\n      if (this.onConnectCallback) {\n        this.onConnectCallback();\n      }\n    };\n    this.socket.onclose = () => {\n      console.log('WebSocket disconnected');\n      if (this.onDisconnectCallback) {\n        this.onDisconnectCallback();\n      }\n      this.attemptReconnect(url);\n    };\n    this.socket.onmessage = event => {\n      console.log('Received message:', event.data);\n      if (this.onMessageCallback) {\n        this.onMessageCallback(event.data);\n      }\n    };\n    this.socket.onerror = error => {\n      console.error('WebSocket error:', error);\n      if (this.onErrorCallback) {\n        this.onErrorCallback(error);\n      }\n    };\n  }\n  attemptReconnect(url) {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      console.log(`Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})...`);\n      setTimeout(() => {\n        this.connect(url);\n      }, this.reconnectDelay);\n    }\n  }\n  send(event, data) {\n    if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n      const message = JSON.stringify({\n        type: event,\n        data: data\n      });\n      this.socket.send(message);\n    } else {\n      console.error('WebSocket is not connected.');\n    }\n  }\n  on(event, callback) {\n    switch (event) {\n      case 'connect':\n        this.onConnectCallback = callback;\n        break;\n      case 'disconnect':\n        this.onDisconnectCallback = callback;\n        break;\n      case 'message':\n        this.onMessageCallback = callback;\n        break;\n      case 'error':\n        this.onErrorCallback = callback;\n        break;\n      default:\n        console.error(`Unknown event: ${event}`);\n    }\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.close();\n      this.socket = null;\n    }\n  }\n}\nconst instance = new WebSocketService();\nexport default instance;","map":{"version":3,"names":["WebSocketService","constructor","socket","onConnectCallback","onDisconnectCallback","onMessageCallback","onErrorCallback","reconnectAttempts","maxReconnectAttempts","reconnectDelay","connect","url","close","wsUrl","replace","console","log","WebSocket","onopen","onclose","attemptReconnect","onmessage","event","data","onerror","error","setTimeout","send","readyState","OPEN","message","JSON","stringify","type","on","callback","disconnect","instance"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/components/WebSocketService.js"],"sourcesContent":["// frontend/src/components/WebSocketService.js\nclass WebSocketService {\n  socket = null;\n  onConnectCallback = null;\n  onDisconnectCallback = null;\n  onMessageCallback = null;\n  onErrorCallback = null;\n  reconnectAttempts = 0;\n  maxReconnectAttempts = 5;\n  reconnectDelay = 1000;\n\n  connect(url) {\n    if (this.socket) {\n      this.socket.close();\n    }\n\n    // 使用原生WebSocket连接\n    const wsUrl = url.replace('http://', 'ws://') + '/socket.io/?EIO=3&transport=websocket';\n    console.log('Connecting to:', wsUrl);\n    \n    this.socket = new WebSocket(wsUrl);\n\n    this.socket.onopen = () => {\n      console.log('WebSocket connected');\n      this.reconnectAttempts = 0;\n      if (this.onConnectCallback) {\n        this.onConnectCallback();\n      }\n    };\n\n    this.socket.onclose = () => {\n      console.log('WebSocket disconnected');\n      if (this.onDisconnectCallback) {\n        this.onDisconnectCallback();\n      }\n      this.attemptReconnect(url);\n    };\n\n    this.socket.onmessage = (event) => {\n      console.log('Received message:', event.data);\n      if (this.onMessageCallback) {\n        this.onMessageCallback(event.data);\n      }\n    };\n\n    this.socket.onerror = (error) => {\n      console.error('WebSocket error:', error);\n      if (this.onErrorCallback) {\n        this.onErrorCallback(error);\n      }\n    };\n  }\n\n  attemptReconnect(url) {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      console.log(`Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})...`);\n      setTimeout(() => {\n        this.connect(url);\n      }, this.reconnectDelay);\n    }\n  }\n\n  send(event, data) {\n    if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n      const message = JSON.stringify({ type: event, data: data });\n      this.socket.send(message);\n    } else {\n      console.error('WebSocket is not connected.');\n    }\n  }\n\n  on(event, callback) {\n    switch (event) {\n      case 'connect':\n        this.onConnectCallback = callback;\n        break;\n      case 'disconnect':\n        this.onDisconnectCallback = callback;\n        break;\n      case 'message':\n        this.onMessageCallback = callback;\n        break;\n      case 'error':\n        this.onErrorCallback = callback;\n        break;\n      default:\n        console.error(`Unknown event: ${event}`);\n    }\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.close();\n      this.socket = null;\n    }\n  }\n}\n\nconst instance = new WebSocketService();\nexport default instance;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}