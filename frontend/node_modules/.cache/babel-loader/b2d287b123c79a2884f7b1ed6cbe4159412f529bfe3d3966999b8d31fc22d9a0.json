{"ast":null,"code":"// English language pack\nexport const en = {\n  // System status\n  systemStatus: {\n    running: 'System Running',\n    collaborating: 'Agent Collaboration',\n    ready: 'DSL Engine Ready'\n  },\n  // Section titles\n  sections: {\n    agentArchitecture: 'Agent Architecture',\n    taskPlanning: 'Task Planning',\n    executionReport: 'Execution Report',\n    functionControl: 'Function Control',\n    interactionMonitoring: 'Interaction Monitoring',\n    subtitle: 'Multi-Agent DSL Framework - Agent Collaboration & DSL Execution',\n    taskSubtitle: 'Task Input, Agent Selection, Execution Control',\n    reportSubtitle: 'Real-time Monitoring, Result Analysis, Performance Reports'\n  },\n  // Agent names\n  agents: {\n    master: 'City Manager Master Agent',\n    autonomousDriving: 'Autonomous Driving Manager',\n    trafficManager: 'Traffic Manager',\n    weatherMonitor: 'Weather Monitor',\n    parkingManager: 'Parking Manager',\n    safetyMonitor: 'Safety Monitor',\n    emergencyServices: 'Emergency Services',\n    lawEnforcement: 'Law Enforcement',\n    sanitationManager: 'Sanitation Manager',\n    irrigationManager: 'Irrigation Manager',\n    perceptionAgent: 'Perception Agent',\n    trafficIncidentAgent: 'Traffic Incident Agent',\n    rerouteAgent: 'Reroute Agent',\n    trafficMonitorAgent: 'Traffic Monitor Agent'\n  },\n  // Agent descriptions\n  agentDescriptions: {\n    autonomousDriving: 'Manages urban autonomous vehicles, optimizes traffic flow, and ensures driving safety.',\n    trafficManager: 'Intelligent traffic signal control, real-time traffic monitoring, and traffic flow optimization.',\n    weatherMonitor: 'Real-time weather monitoring, extreme weather prediction, and alert information dissemination.',\n    parkingManager: 'Intelligent parking management, real-time parking space monitoring, and parking guidance services.',\n    safetyMonitor: 'Comprehensive safety monitoring, identifying potential risks, and responding promptly to safety incidents.',\n    emergencyServices: 'Emergency medical service management, rapid response to medical emergency needs.',\n    lawEnforcement: 'Law enforcement management agent, maintaining urban order and handling violations.',\n    sanitationManager: 'Intelligent sanitation management, monitoring waste conditions, and optimizing cleaning operations.',\n    irrigationManager: 'Intelligent irrigation management, monitoring soil moisture, and optimizing water resource utilization.',\n    perceptionAgent: 'Environmental perception agent, monitoring urban environmental changes and providing data support.',\n    trafficIncidentAgent: 'Traffic incident handling agent, rapid response to traffic accidents and coordination of rescue.',\n    rerouteAgent: 'Route replanning agent, dynamically adjusting traffic routes and optimizing traffic efficiency.',\n    trafficMonitorAgent: 'Traffic monitoring agent, real-time traffic monitoring and providing data support.'\n  },\n  // Agent detailed descriptions\n  agentDetails: {\n    autonomousDriving: 'Uses AI algorithms to analyze traffic conditions in real-time, providing optimal path planning for autonomous vehicles, coordinating vehicle interactions, and handling emergency situations.',\n    trafficManager: 'Monitors traffic flow in real-time through sensor networks, dynamically adjusts signal timing, reduces congestion, and improves traffic efficiency.',\n    weatherMonitor: 'Integrates multi-source meteorological data, provides accurate weather forecasts, issues severe weather warnings promptly, and assists other agents in developing response strategies.',\n    parkingManager: 'Monitors parking space usage through IoT sensors, provides real-time parking information and navigation services to drivers, and optimizes parking resource utilization.',\n    safetyMonitor: 'Monitors urban safety conditions in real-time through video surveillance and sensor networks, identifies abnormal behavior, and responds quickly to safety incidents.',\n    emergencyServices: 'Integrates medical resources, optimizes emergency vehicle dispatch, and provides rapid response and efficient services for emergency medical events.',\n    lawEnforcement: 'Identifies violations through intelligent monitoring systems, coordinates law enforcement resources, and maintains urban public order.',\n    sanitationManager: 'Monitors trash bin status through sensors, intelligently dispatches cleaning vehicles, optimizes sanitation routes, and maintains clean urban environment.',\n    irrigationManager: 'Monitors soil moisture and plant growth conditions, intelligently controls irrigation systems, and optimizes water resource utilization efficiency.',\n    perceptionAgent: 'Collects environmental data through various sensors, monitors urban environmental changes in real-time, and provides data support for other agents.',\n    trafficIncidentAgent: 'Quickly identifies traffic accidents, coordinates rescue resources, optimizes accident handling processes, and reduces traffic impact.',\n    rerouteAgent: 'Provides optimal route planning for vehicles based on real-time traffic data and historical patterns, dynamically adjusts routes to avoid congestion, and improves traffic efficiency.',\n    trafficMonitorAgent: 'Monitors traffic conditions in real-time through video surveillance and sensor networks, providing accurate traffic data and analysis reports.'\n  },\n  // Function control\n  functionControl: {\n    title: 'Agent Function Display',\n    multiAgentTitle: 'Multi-Agent Collaboration',\n    singleAgentTitle: 'Single Agent Function',\n    selectedAgents: 'Selected Agents:',\n    startCollaboration: 'Start Collaboration',\n    sendMessage: 'Send Message',\n    modeToggle: 'Multi-Agent',\n    modeToggleTooltip: 'Switch to Multi-Agent Collaboration Mode'\n  },\n  // Interaction monitoring\n  monitoring: {\n    interactionCount: 'Interactions',\n    inProgress: 'In Progress',\n    completed: 'Completed',\n    interactionHistory: 'Interaction History',\n    clearHistory: 'Clear History'\n  },\n  // Agent roles\n  roles: {\n    master: 'City Management Master Agent',\n    autonomousDriving: 'Autonomous Driving Management',\n    trafficManager: 'Traffic Flow Management',\n    weatherMonitor: 'Weather Monitoring & Analysis',\n    parkingManager: 'Parking Resource Management',\n    safetyMonitor: 'Safety Risk Monitoring',\n    emergencyServices: 'Emergency Response Services',\n    lawEnforcement: 'Law Enforcement Management',\n    sanitationManager: 'Sanitation Management',\n    irrigationManager: 'Smart Irrigation Management',\n    perceptionAgent: 'Environmental Perception Analysis',\n    trafficIncidentAgent: 'Traffic Incident Handling',\n    rerouteAgent: 'Route Replanning',\n    trafficMonitorAgent: 'Traffic Monitoring Analysis'\n  },\n  // Buttons and actions\n  buttons: {\n    send: 'Send',\n    clear: 'Clear',\n    start: 'Start',\n    cancel: 'Cancel',\n    confirm: 'Confirm',\n    close: 'Close'\n  },\n  // Messages and prompts\n  messages: {\n    selectAgent: 'Please select an agent',\n    enterMessage: 'Please enter message content',\n    collaborationStarted: 'Multi-agent collaboration started',\n    messageSent: 'Message sent',\n    historyCleared: 'Interaction history cleared'\n  },\n  // Task planning\n  taskPlanning: {\n    inputTitle: 'Task Input',\n    placeholder: 'Enter the task to execute, e.g.: Optimize urban traffic flow, ensure driving safety',\n    examples: 'Example Tasks',\n    example1: 'Optimize urban traffic flow, ensure driving safety',\n    example2: 'Handle emergency weather alerts, activate emergency response',\n    example3: 'Coordinate parking resources, reduce traffic congestion',\n    agentSelection: 'Agent Selection',\n    executeTask: 'Execute Task'\n  },\n  // Execution report\n  report: {\n    summary: 'Execution Summary',\n    details: 'Detailed Report',\n    completedTasks: 'Completed Tasks',\n    activeAgents: 'Active Agents',\n    successRate: 'Success Rate',\n    emptyTitle: 'No Execution Records',\n    emptyMessage: 'Detailed reports and analysis results will be displayed after task execution'\n  },\n  // DSL related\n  dsl: {\n    primitives: 'DSL Primitives',\n    execution: 'DSL Execution',\n    workflow: 'Workflow',\n    phase: 'Phase',\n    participants: 'Participants',\n    status: 'Status',\n    timestamp: 'Timestamp'\n  }\n};","map":{"version":3,"names":["en","systemStatus","running","collaborating","ready","sections","agentArchitecture","taskPlanning","executionReport","functionControl","interactionMonitoring","subtitle","taskSubtitle","reportSubtitle","agents","master","autonomousDriving","trafficManager","weatherMonitor","parkingManager","safetyMonitor","emergencyServices","lawEnforcement","sanitationManager","irrigationManager","perceptionAgent","trafficIncidentAgent","rerouteAgent","trafficMonitorAgent","agentDescriptions","agentDetails","title","multiAgentTitle","singleAgentTitle","selectedAgents","startCollaboration","sendMessage","modeToggle","modeToggleTooltip","monitoring","interactionCount","inProgress","completed","interactionHistory","clearHistory","roles","buttons","send","clear","start","cancel","confirm","close","messages","selectAgent","enterMessage","collaborationStarted","messageSent","historyCleared","inputTitle","placeholder","examples","example1","example2","example3","agentSelection","executeTask","report","summary","details","completedTasks","activeAgents","successRate","emptyTitle","emptyMessage","dsl","primitives","execution","workflow","phase","participants","status","timestamp"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/locales/en.js"],"sourcesContent":["// English language pack\nexport const en = {\n  // System status\n  systemStatus: {\n    running: 'System Running',\n    collaborating: 'Agent Collaboration',\n    ready: 'DSL Engine Ready'\n  },\n\n  // Section titles\n  sections: {\n    agentArchitecture: 'Agent Architecture',\n    taskPlanning: 'Task Planning',\n    executionReport: 'Execution Report',\n    functionControl: 'Function Control',\n    interactionMonitoring: 'Interaction Monitoring',\n    subtitle: 'Multi-Agent DSL Framework - Agent Collaboration & DSL Execution',\n    taskSubtitle: 'Task Input, Agent Selection, Execution Control',\n    reportSubtitle: 'Real-time Monitoring, Result Analysis, Performance Reports'\n  },\n\n  // Agent names\n  agents: {\n    master: 'City Manager Master Agent',\n    autonomousDriving: 'Autonomous Driving Manager',\n    trafficManager: 'Traffic Manager',\n    weatherMonitor: 'Weather Monitor',\n    parkingManager: 'Parking Manager',\n    safetyMonitor: 'Safety Monitor',\n    emergencyServices: 'Emergency Services',\n    lawEnforcement: 'Law Enforcement',\n    sanitationManager: 'Sanitation Manager',\n    irrigationManager: 'Irrigation Manager',\n    perceptionAgent: 'Perception Agent',\n    trafficIncidentAgent: 'Traffic Incident Agent',\n    rerouteAgent: 'Reroute Agent',\n    trafficMonitorAgent: 'Traffic Monitor Agent'\n  },\n\n  // Agent descriptions\n  agentDescriptions: {\n    autonomousDriving: 'Manages urban autonomous vehicles, optimizes traffic flow, and ensures driving safety.',\n    trafficManager: 'Intelligent traffic signal control, real-time traffic monitoring, and traffic flow optimization.',\n    weatherMonitor: 'Real-time weather monitoring, extreme weather prediction, and alert information dissemination.',\n    parkingManager: 'Intelligent parking management, real-time parking space monitoring, and parking guidance services.',\n    safetyMonitor: 'Comprehensive safety monitoring, identifying potential risks, and responding promptly to safety incidents.',\n    emergencyServices: 'Emergency medical service management, rapid response to medical emergency needs.',\n    lawEnforcement: 'Law enforcement management agent, maintaining urban order and handling violations.',\n    sanitationManager: 'Intelligent sanitation management, monitoring waste conditions, and optimizing cleaning operations.',\n    irrigationManager: 'Intelligent irrigation management, monitoring soil moisture, and optimizing water resource utilization.',\n    perceptionAgent: 'Environmental perception agent, monitoring urban environmental changes and providing data support.',\n    trafficIncidentAgent: 'Traffic incident handling agent, rapid response to traffic accidents and coordination of rescue.',\n    rerouteAgent: 'Route replanning agent, dynamically adjusting traffic routes and optimizing traffic efficiency.',\n    trafficMonitorAgent: 'Traffic monitoring agent, real-time traffic monitoring and providing data support.'\n  },\n\n  // Agent detailed descriptions\n  agentDetails: {\n    autonomousDriving: 'Uses AI algorithms to analyze traffic conditions in real-time, providing optimal path planning for autonomous vehicles, coordinating vehicle interactions, and handling emergency situations.',\n    trafficManager: 'Monitors traffic flow in real-time through sensor networks, dynamically adjusts signal timing, reduces congestion, and improves traffic efficiency.',\n    weatherMonitor: 'Integrates multi-source meteorological data, provides accurate weather forecasts, issues severe weather warnings promptly, and assists other agents in developing response strategies.',\n    parkingManager: 'Monitors parking space usage through IoT sensors, provides real-time parking information and navigation services to drivers, and optimizes parking resource utilization.',\n    safetyMonitor: 'Monitors urban safety conditions in real-time through video surveillance and sensor networks, identifies abnormal behavior, and responds quickly to safety incidents.',\n    emergencyServices: 'Integrates medical resources, optimizes emergency vehicle dispatch, and provides rapid response and efficient services for emergency medical events.',\n    lawEnforcement: 'Identifies violations through intelligent monitoring systems, coordinates law enforcement resources, and maintains urban public order.',\n    sanitationManager: 'Monitors trash bin status through sensors, intelligently dispatches cleaning vehicles, optimizes sanitation routes, and maintains clean urban environment.',\n    irrigationManager: 'Monitors soil moisture and plant growth conditions, intelligently controls irrigation systems, and optimizes water resource utilization efficiency.',\n    perceptionAgent: 'Collects environmental data through various sensors, monitors urban environmental changes in real-time, and provides data support for other agents.',\n    trafficIncidentAgent: 'Quickly identifies traffic accidents, coordinates rescue resources, optimizes accident handling processes, and reduces traffic impact.',\n    rerouteAgent: 'Provides optimal route planning for vehicles based on real-time traffic data and historical patterns, dynamically adjusts routes to avoid congestion, and improves traffic efficiency.',\n    trafficMonitorAgent: 'Monitors traffic conditions in real-time through video surveillance and sensor networks, providing accurate traffic data and analysis reports.'\n  },\n\n  // Function control\n  functionControl: {\n    title: 'Agent Function Display',\n    multiAgentTitle: 'Multi-Agent Collaboration',\n    singleAgentTitle: 'Single Agent Function',\n    selectedAgents: 'Selected Agents:',\n    startCollaboration: 'Start Collaboration',\n    sendMessage: 'Send Message',\n    modeToggle: 'Multi-Agent',\n    modeToggleTooltip: 'Switch to Multi-Agent Collaboration Mode'\n  },\n\n  // Interaction monitoring\n  monitoring: {\n    interactionCount: 'Interactions',\n    inProgress: 'In Progress',\n    completed: 'Completed',\n    interactionHistory: 'Interaction History',\n    clearHistory: 'Clear History'\n  },\n\n  // Agent roles\n  roles: {\n    master: 'City Management Master Agent',\n    autonomousDriving: 'Autonomous Driving Management',\n    trafficManager: 'Traffic Flow Management',\n    weatherMonitor: 'Weather Monitoring & Analysis',\n    parkingManager: 'Parking Resource Management',\n    safetyMonitor: 'Safety Risk Monitoring',\n    emergencyServices: 'Emergency Response Services',\n    lawEnforcement: 'Law Enforcement Management',\n    sanitationManager: 'Sanitation Management',\n    irrigationManager: 'Smart Irrigation Management',\n    perceptionAgent: 'Environmental Perception Analysis',\n    trafficIncidentAgent: 'Traffic Incident Handling',\n    rerouteAgent: 'Route Replanning',\n    trafficMonitorAgent: 'Traffic Monitoring Analysis'\n  },\n\n  // Buttons and actions\n  buttons: {\n    send: 'Send',\n    clear: 'Clear',\n    start: 'Start',\n    cancel: 'Cancel',\n    confirm: 'Confirm',\n    close: 'Close'\n  },\n\n  // Messages and prompts\n  messages: {\n    selectAgent: 'Please select an agent',\n    enterMessage: 'Please enter message content',\n    collaborationStarted: 'Multi-agent collaboration started',\n    messageSent: 'Message sent',\n    historyCleared: 'Interaction history cleared'\n  },\n\n  // Task planning\n  taskPlanning: {\n    inputTitle: 'Task Input',\n    placeholder: 'Enter the task to execute, e.g.: Optimize urban traffic flow, ensure driving safety',\n    examples: 'Example Tasks',\n    example1: 'Optimize urban traffic flow, ensure driving safety',\n    example2: 'Handle emergency weather alerts, activate emergency response',\n    example3: 'Coordinate parking resources, reduce traffic congestion',\n    agentSelection: 'Agent Selection',\n    executeTask: 'Execute Task'\n  },\n\n  // Execution report\n  report: {\n    summary: 'Execution Summary',\n    details: 'Detailed Report',\n    completedTasks: 'Completed Tasks',\n    activeAgents: 'Active Agents',\n    successRate: 'Success Rate',\n    emptyTitle: 'No Execution Records',\n    emptyMessage: 'Detailed reports and analysis results will be displayed after task execution'\n  },\n\n  // DSL related\n  dsl: {\n    primitives: 'DSL Primitives',\n    execution: 'DSL Execution',\n    workflow: 'Workflow',\n    phase: 'Phase',\n    participants: 'Participants',\n    status: 'Status',\n    timestamp: 'Timestamp'\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}