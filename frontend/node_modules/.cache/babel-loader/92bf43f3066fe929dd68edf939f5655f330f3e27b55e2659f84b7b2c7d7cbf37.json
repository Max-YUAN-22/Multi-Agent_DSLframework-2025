{"ast":null,"code":"// English language pack\nexport const en={// System status\nsystemStatus:{running:'System Running',collaborating:'Agent Collaboration',ready:'DSL Engine Ready'},// Section titles\nsections:{agentArchitecture:'Agent Architecture',taskPlanning:'Task Planning',executionReport:'Execution Report',functionControl:'Function Control',interactionMonitoring:'Interaction Monitoring',subtitle:'Multi-Agent DSL Framework - Agent Collaboration & DSL Execution',taskSubtitle:'Task Input, Agent Selection, Execution Control',reportSubtitle:'Real-time Monitoring, Result Analysis, Performance Reports'},// Agent names\nagents:{master:'City Manager Master Agent',autonomousDriving:'Autonomous Driving Manager',trafficManager:'Traffic Manager',weatherMonitor:'Weather Monitor',parkingManager:'Parking Manager',safetyMonitor:'Safety Monitor',emergencyServices:'Emergency Services',lawEnforcement:'Law Enforcement',sanitationManager:'Sanitation Manager',irrigationManager:'Irrigation Manager',perceptionAgent:'Perception Agent',trafficIncidentAgent:'Traffic Incident Agent',rerouteAgent:'Reroute Agent',trafficMonitorAgent:'Traffic Monitor Agent'},// Agent descriptions\nagentDescriptions:{autonomousDriving:'Manages urban autonomous vehicles, optimizes traffic flow, and ensures driving safety.',trafficManager:'Intelligent traffic signal control, real-time traffic monitoring, and traffic flow optimization.',weatherMonitor:'Real-time weather monitoring, extreme weather prediction, and alert information dissemination.',parkingManager:'Intelligent parking management, real-time parking space monitoring, and parking guidance services.',safetyMonitor:'Comprehensive safety monitoring, identifying potential risks, and responding promptly to safety incidents.',emergencyServices:'Emergency medical service management, rapid response to medical emergency needs.',lawEnforcement:'Law enforcement management agent, maintaining urban order and handling violations.',sanitationManager:'Intelligent sanitation management, monitoring waste conditions, and optimizing cleaning operations.',irrigationManager:'Intelligent irrigation management, monitoring soil moisture, and optimizing water resource utilization.',perceptionAgent:'Environmental perception agent, monitoring urban environmental changes and providing data support.',trafficIncidentAgent:'Traffic incident handling agent, rapid response to traffic accidents and coordination of rescue.',rerouteAgent:'Route replanning agent, dynamically adjusting traffic routes and optimizing traffic efficiency.',trafficMonitorAgent:'Traffic monitoring agent, real-time traffic monitoring and providing data support.'},// Agent detailed descriptions\nagentDetails:{autonomousDriving:'Uses AI algorithms to analyze traffic conditions in real-time, providing optimal path planning for autonomous vehicles, coordinating vehicle interactions, and handling emergency situations.',trafficManager:'Monitors traffic flow in real-time through sensor networks, dynamically adjusts signal timing, reduces congestion, and improves traffic efficiency.',weatherMonitor:'Integrates multi-source meteorological data, provides accurate weather forecasts, issues severe weather warnings promptly, and assists other agents in developing response strategies.',parkingManager:'Monitors parking space usage through IoT sensors, provides real-time parking information and navigation services to drivers, and optimizes parking resource utilization.',safetyMonitor:'Monitors urban safety conditions in real-time through video surveillance and sensor networks, identifies abnormal behavior, and responds quickly to safety incidents.',emergencyServices:'Integrates medical resources, optimizes emergency vehicle dispatch, and provides rapid response and efficient services for emergency medical events.',lawEnforcement:'Identifies violations through intelligent monitoring systems, coordinates law enforcement resources, and maintains urban public order.',sanitationManager:'Monitors trash bin status through sensors, intelligently dispatches cleaning vehicles, optimizes sanitation routes, and maintains clean urban environment.',irrigationManager:'Monitors soil moisture and plant growth conditions, intelligently controls irrigation systems, and optimizes water resource utilization efficiency.',perceptionAgent:'Collects environmental data through various sensors, monitors urban environmental changes in real-time, and provides data support for other agents.',trafficIncidentAgent:'Quickly identifies traffic accidents, coordinates rescue resources, optimizes accident handling processes, and reduces traffic impact.',rerouteAgent:'Provides optimal route planning for vehicles based on real-time traffic data and historical patterns, dynamically adjusts routes to avoid congestion, and improves traffic efficiency.',trafficMonitorAgent:'Monitors traffic conditions in real-time through video surveillance and sensor networks, providing accurate traffic data and analysis reports.'},// Function control\nfunctionControl:{title:'Agent Function Display',multiAgentTitle:'Multi-Agent Collaboration',singleAgentTitle:'Single Agent Function',selectedAgents:'Selected Agents:',startCollaboration:'Start Collaboration',sendMessage:'Send Message',modeToggle:'Multi-Agent',modeToggleTooltip:'Switch to Multi-Agent Collaboration Mode'},// Interaction monitoring\nmonitoring:{interactionCount:'Interactions',inProgress:'In Progress',completed:'Completed',interactionHistory:'Interaction History',clearHistory:'Clear History'},// Agent roles\nroles:{master:'City Management Master Agent',autonomousDriving:'Autonomous Driving Management',trafficManager:'Traffic Flow Management',weatherMonitor:'Weather Monitoring & Analysis',parkingManager:'Parking Resource Management',safetyMonitor:'Safety Risk Monitoring',emergencyServices:'Emergency Response Services',lawEnforcement:'Law Enforcement Management',sanitationManager:'Sanitation Management',irrigationManager:'Smart Irrigation Management',perceptionAgent:'Environmental Perception Analysis',trafficIncidentAgent:'Traffic Incident Handling',rerouteAgent:'Route Replanning',trafficMonitorAgent:'Traffic Monitoring Analysis'},// Buttons and actions\nbuttons:{send:'Send',clear:'Clear',start:'Start',cancel:'Cancel',confirm:'Confirm',close:'Close'},// Messages and prompts\nmessages:{selectAgent:'Please select an agent',enterMessage:'Please enter message content',collaborationStarted:'Multi-agent collaboration started',messageSent:'Message sent',historyCleared:'Interaction history cleared'},// Task planning\ntaskPlanning:{inputTitle:'Task Input',placeholder:'Enter the task to execute, e.g.: Optimize urban traffic flow, ensure driving safety',examples:'Example Tasks',example1:'Optimize urban traffic flow, ensure driving safety',example2:'Handle emergency weather alerts, activate emergency response',example3:'Coordinate parking resources, reduce traffic congestion',agentSelection:'Agent Selection',executeTask:'Execute Task'},// Execution report\nreport:{summary:'Execution Summary',details:'Detailed Report',completedTasks:'Completed Tasks',activeAgents:'Active Agents',successRate:'Success Rate',emptyTitle:'No Execution Records',emptyMessage:'Detailed reports and analysis results will be displayed after task execution'},// DSL related\ndsl:{primitives:'DSL Primitives',execution:'DSL Execution',workflow:'Workflow',phase:'Phase',participants:'Participants',status:'Status',timestamp:'Timestamp'}};","map":{"version":3,"names":["en","systemStatus","running","collaborating","ready","sections","agentArchitecture","taskPlanning","executionReport","functionControl","interactionMonitoring","subtitle","taskSubtitle","reportSubtitle","agents","master","autonomousDriving","trafficManager","weatherMonitor","parkingManager","safetyMonitor","emergencyServices","lawEnforcement","sanitationManager","irrigationManager","perceptionAgent","trafficIncidentAgent","rerouteAgent","trafficMonitorAgent","agentDescriptions","agentDetails","title","multiAgentTitle","singleAgentTitle","selectedAgents","startCollaboration","sendMessage","modeToggle","modeToggleTooltip","monitoring","interactionCount","inProgress","completed","interactionHistory","clearHistory","roles","buttons","send","clear","start","cancel","confirm","close","messages","selectAgent","enterMessage","collaborationStarted","messageSent","historyCleared","inputTitle","placeholder","examples","example1","example2","example3","agentSelection","executeTask","report","summary","details","completedTasks","activeAgents","successRate","emptyTitle","emptyMessage","dsl","primitives","execution","workflow","phase","participants","status","timestamp"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/locales/en.js"],"sourcesContent":["// English language pack\nexport const en = {\n  // System status\n  systemStatus: {\n    running: 'System Running',\n    collaborating: 'Agent Collaboration',\n    ready: 'DSL Engine Ready'\n  },\n\n  // Section titles\n  sections: {\n    agentArchitecture: 'Agent Architecture',\n    taskPlanning: 'Task Planning',\n    executionReport: 'Execution Report',\n    functionControl: 'Function Control',\n    interactionMonitoring: 'Interaction Monitoring',\n    subtitle: 'Multi-Agent DSL Framework - Agent Collaboration & DSL Execution',\n    taskSubtitle: 'Task Input, Agent Selection, Execution Control',\n    reportSubtitle: 'Real-time Monitoring, Result Analysis, Performance Reports'\n  },\n\n  // Agent names\n  agents: {\n    master: 'City Manager Master Agent',\n    autonomousDriving: 'Autonomous Driving Manager',\n    trafficManager: 'Traffic Manager',\n    weatherMonitor: 'Weather Monitor',\n    parkingManager: 'Parking Manager',\n    safetyMonitor: 'Safety Monitor',\n    emergencyServices: 'Emergency Services',\n    lawEnforcement: 'Law Enforcement',\n    sanitationManager: 'Sanitation Manager',\n    irrigationManager: 'Irrigation Manager',\n    perceptionAgent: 'Perception Agent',\n    trafficIncidentAgent: 'Traffic Incident Agent',\n    rerouteAgent: 'Reroute Agent',\n    trafficMonitorAgent: 'Traffic Monitor Agent'\n  },\n\n  // Agent descriptions\n  agentDescriptions: {\n    autonomousDriving: 'Manages urban autonomous vehicles, optimizes traffic flow, and ensures driving safety.',\n    trafficManager: 'Intelligent traffic signal control, real-time traffic monitoring, and traffic flow optimization.',\n    weatherMonitor: 'Real-time weather monitoring, extreme weather prediction, and alert information dissemination.',\n    parkingManager: 'Intelligent parking management, real-time parking space monitoring, and parking guidance services.',\n    safetyMonitor: 'Comprehensive safety monitoring, identifying potential risks, and responding promptly to safety incidents.',\n    emergencyServices: 'Emergency medical service management, rapid response to medical emergency needs.',\n    lawEnforcement: 'Law enforcement management agent, maintaining urban order and handling violations.',\n    sanitationManager: 'Intelligent sanitation management, monitoring waste conditions, and optimizing cleaning operations.',\n    irrigationManager: 'Intelligent irrigation management, monitoring soil moisture, and optimizing water resource utilization.',\n    perceptionAgent: 'Environmental perception agent, monitoring urban environmental changes and providing data support.',\n    trafficIncidentAgent: 'Traffic incident handling agent, rapid response to traffic accidents and coordination of rescue.',\n    rerouteAgent: 'Route replanning agent, dynamically adjusting traffic routes and optimizing traffic efficiency.',\n    trafficMonitorAgent: 'Traffic monitoring agent, real-time traffic monitoring and providing data support.'\n  },\n\n  // Agent detailed descriptions\n  agentDetails: {\n    autonomousDriving: 'Uses AI algorithms to analyze traffic conditions in real-time, providing optimal path planning for autonomous vehicles, coordinating vehicle interactions, and handling emergency situations.',\n    trafficManager: 'Monitors traffic flow in real-time through sensor networks, dynamically adjusts signal timing, reduces congestion, and improves traffic efficiency.',\n    weatherMonitor: 'Integrates multi-source meteorological data, provides accurate weather forecasts, issues severe weather warnings promptly, and assists other agents in developing response strategies.',\n    parkingManager: 'Monitors parking space usage through IoT sensors, provides real-time parking information and navigation services to drivers, and optimizes parking resource utilization.',\n    safetyMonitor: 'Monitors urban safety conditions in real-time through video surveillance and sensor networks, identifies abnormal behavior, and responds quickly to safety incidents.',\n    emergencyServices: 'Integrates medical resources, optimizes emergency vehicle dispatch, and provides rapid response and efficient services for emergency medical events.',\n    lawEnforcement: 'Identifies violations through intelligent monitoring systems, coordinates law enforcement resources, and maintains urban public order.',\n    sanitationManager: 'Monitors trash bin status through sensors, intelligently dispatches cleaning vehicles, optimizes sanitation routes, and maintains clean urban environment.',\n    irrigationManager: 'Monitors soil moisture and plant growth conditions, intelligently controls irrigation systems, and optimizes water resource utilization efficiency.',\n    perceptionAgent: 'Collects environmental data through various sensors, monitors urban environmental changes in real-time, and provides data support for other agents.',\n    trafficIncidentAgent: 'Quickly identifies traffic accidents, coordinates rescue resources, optimizes accident handling processes, and reduces traffic impact.',\n    rerouteAgent: 'Provides optimal route planning for vehicles based on real-time traffic data and historical patterns, dynamically adjusts routes to avoid congestion, and improves traffic efficiency.',\n    trafficMonitorAgent: 'Monitors traffic conditions in real-time through video surveillance and sensor networks, providing accurate traffic data and analysis reports.'\n  },\n\n  // Function control\n  functionControl: {\n    title: 'Agent Function Display',\n    multiAgentTitle: 'Multi-Agent Collaboration',\n    singleAgentTitle: 'Single Agent Function',\n    selectedAgents: 'Selected Agents:',\n    startCollaboration: 'Start Collaboration',\n    sendMessage: 'Send Message',\n    modeToggle: 'Multi-Agent',\n    modeToggleTooltip: 'Switch to Multi-Agent Collaboration Mode'\n  },\n\n  // Interaction monitoring\n  monitoring: {\n    interactionCount: 'Interactions',\n    inProgress: 'In Progress',\n    completed: 'Completed',\n    interactionHistory: 'Interaction History',\n    clearHistory: 'Clear History'\n  },\n\n  // Agent roles\n  roles: {\n    master: 'City Management Master Agent',\n    autonomousDriving: 'Autonomous Driving Management',\n    trafficManager: 'Traffic Flow Management',\n    weatherMonitor: 'Weather Monitoring & Analysis',\n    parkingManager: 'Parking Resource Management',\n    safetyMonitor: 'Safety Risk Monitoring',\n    emergencyServices: 'Emergency Response Services',\n    lawEnforcement: 'Law Enforcement Management',\n    sanitationManager: 'Sanitation Management',\n    irrigationManager: 'Smart Irrigation Management',\n    perceptionAgent: 'Environmental Perception Analysis',\n    trafficIncidentAgent: 'Traffic Incident Handling',\n    rerouteAgent: 'Route Replanning',\n    trafficMonitorAgent: 'Traffic Monitoring Analysis'\n  },\n\n  // Buttons and actions\n  buttons: {\n    send: 'Send',\n    clear: 'Clear',\n    start: 'Start',\n    cancel: 'Cancel',\n    confirm: 'Confirm',\n    close: 'Close'\n  },\n\n  // Messages and prompts\n  messages: {\n    selectAgent: 'Please select an agent',\n    enterMessage: 'Please enter message content',\n    collaborationStarted: 'Multi-agent collaboration started',\n    messageSent: 'Message sent',\n    historyCleared: 'Interaction history cleared'\n  },\n\n  // Task planning\n  taskPlanning: {\n    inputTitle: 'Task Input',\n    placeholder: 'Enter the task to execute, e.g.: Optimize urban traffic flow, ensure driving safety',\n    examples: 'Example Tasks',\n    example1: 'Optimize urban traffic flow, ensure driving safety',\n    example2: 'Handle emergency weather alerts, activate emergency response',\n    example3: 'Coordinate parking resources, reduce traffic congestion',\n    agentSelection: 'Agent Selection',\n    executeTask: 'Execute Task'\n  },\n\n  // Execution report\n  report: {\n    summary: 'Execution Summary',\n    details: 'Detailed Report',\n    completedTasks: 'Completed Tasks',\n    activeAgents: 'Active Agents',\n    successRate: 'Success Rate',\n    emptyTitle: 'No Execution Records',\n    emptyMessage: 'Detailed reports and analysis results will be displayed after task execution'\n  },\n\n  // DSL related\n  dsl: {\n    primitives: 'DSL Primitives',\n    execution: 'DSL Execution',\n    workflow: 'Workflow',\n    phase: 'Phase',\n    participants: 'Participants',\n    status: 'Status',\n    timestamp: 'Timestamp'\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}