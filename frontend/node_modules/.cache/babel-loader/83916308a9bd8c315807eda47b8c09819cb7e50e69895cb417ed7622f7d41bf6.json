{"ast":null,"code":"var _jsxFileName = \"/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/pages/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grid, Paper } from '@mui/material';\nimport AutonomousDrivingCard from '../components/AutonomousDrivingCard';\nimport WeatherAlertCard from '../components/WeatherAlertCard';\nimport ParkingUpdateCard from '../components/ParkingUpdateCard';\nimport SafetyInspectionCard from '../components/SafetyInspectionCard';\nimport InteractionHistory from '../components/InteractionHistory';\nimport WebSocketService from '../components/WebSocketService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [readyState, setReadyState] = useState(WebSocket.CONNECTING);\n  useEffect(() => {\n    const wsUrl = `ws://localhost:${process.env.REACT_APP_BACKEND_PORT || 8006}`;\n    WebSocketService.connect(wsUrl);\n    const handleConnect = () => {\n      setReadyState(WebSocket.OPEN);\n    };\n    const handleDisconnect = () => {\n      setReadyState(WebSocket.CLOSED);\n    };\n    const handleMessage = data => {\n      try {\n        // Assuming data is a JSON string\n        const message = JSON.parse(data);\n        setMessages(prevMessages => [...prevMessages, message]);\n      } catch (error) {\n        // If data is not a JSON string, handle it as a raw message\n        setMessages(prevMessages => [...prevMessages, {\n          type: 'raw',\n          data: data,\n          timestamp: new Date().toISOString()\n        }]);\n      }\n    };\n    WebSocketService.on('connect', handleConnect);\n    WebSocketService.on('disconnect', handleDisconnect);\n    WebSocketService.on('message', handleMessage);\n\n    // Cleanup on component unmount\n    return () => {\n      WebSocketService.disconnect();\n    };\n  }, []);\n  const handleSend = (task, data) => {\n    const message = {\n      type: task,\n      data: data\n    };\n    WebSocketService.send(message);\n  };\n  const sendGenerateReport = () => {\n    const message = {\n      type: 'generate_report',\n      data: {}\n    };\n    WebSocketService.send(message);\n  };\n  const clearHistory = () => {\n    setMessages([]);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: /*#__PURE__*/_jsxDEV(InteractionHistory, {\n            events: messages,\n            readyState: readyState,\n            onGenerateReport: sendGenerateReport,\n            onClear: clearHistory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(AutonomousDrivingCard, {\n          onSend: data => handleSend('smart_city_simulation', data),\n          readyState: readyState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(WeatherAlertCard, {\n          onSend: data => handleSend('smart_city_simulation', data),\n          readyState: readyState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(ParkingUpdateCard, {\n          onSend: data => handleSend('smart_city_simulation', data),\n          readyState: readyState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(SafetyInspectionCard, {\n          onSend: data => handleSend('smart_city_simulation', data),\n          readyState: readyState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"k22ZdD4DFnKi1bAUnDwdwqqAFms=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","Paper","AutonomousDrivingCard","WeatherAlertCard","ParkingUpdateCard","SafetyInspectionCard","InteractionHistory","WebSocketService","jsxDEV","_jsxDEV","HomePage","_s","messages","setMessages","readyState","setReadyState","WebSocket","CONNECTING","wsUrl","process","env","REACT_APP_BACKEND_PORT","connect","handleConnect","OPEN","handleDisconnect","CLOSED","handleMessage","data","message","JSON","parse","prevMessages","error","type","timestamp","Date","toISOString","on","disconnect","handleSend","task","send","sendGenerateReport","clearHistory","maxWidth","sx","mt","mb","children","container","spacing","item","xs","p","display","flexDirection","events","onGenerateReport","onClear","fileName","_jsxFileName","lineNumber","columnNumber","md","onSend","_c","$RefreshReg$"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/pages/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Grid, Paper } from '@mui/material';\nimport AutonomousDrivingCard from '../components/AutonomousDrivingCard';\nimport WeatherAlertCard from '../components/WeatherAlertCard';\nimport ParkingUpdateCard from '../components/ParkingUpdateCard';\nimport SafetyInspectionCard from '../components/SafetyInspectionCard';\nimport InteractionHistory from '../components/InteractionHistory';\nimport WebSocketService from '../components/WebSocketService';\n\nconst HomePage = () => {\n  const [messages, setMessages] = useState([]);\n  const [readyState, setReadyState] = useState(WebSocket.CONNECTING);\n\n  useEffect(() => {\n    const wsUrl = `ws://localhost:${process.env.REACT_APP_BACKEND_PORT || 8006}`;\n    WebSocketService.connect(wsUrl);\n\n    const handleConnect = () => {\n      setReadyState(WebSocket.OPEN);\n    };\n\n    const handleDisconnect = () => {\n      setReadyState(WebSocket.CLOSED);\n    };\n\n    const handleMessage = (data) => {\n      try {\n        // Assuming data is a JSON string\n        const message = JSON.parse(data);\n        setMessages((prevMessages) => [...prevMessages, message]);\n      } catch (error) {\n        // If data is not a JSON string, handle it as a raw message\n        setMessages((prevMessages) => [...prevMessages, { type: 'raw', data: data, timestamp: new Date().toISOString() }]);\n      }\n    };\n\n    WebSocketService.on('connect', handleConnect);\n    WebSocketService.on('disconnect', handleDisconnect);\n    WebSocketService.on('message', handleMessage);\n\n    // Cleanup on component unmount\n    return () => {\n      WebSocketService.disconnect();\n    };\n  }, []);\n\n  const handleSend = (task, data) => {\n    const message = {\n      type: task,\n      data: data,\n    };\n    WebSocketService.send(message);\n  };\n\n  const sendGenerateReport = () => {\n    const message = {\n      type: 'generate_report',\n      data: {},\n    };\n    WebSocketService.send(message);\n  };\n\n  const clearHistory = () => {\n    setMessages([]);\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Grid container spacing={3}>\n        {/* Interaction History */}\n        <Grid item xs={12}>\n          <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\n            <InteractionHistory events={messages} readyState={readyState} onGenerateReport={sendGenerateReport} onClear={clearHistory} />\n          </Paper>\n        </Grid>\n\n        {/* Agent Interaction Cards */}\n        <Grid item xs={12} md={6}>\n          <AutonomousDrivingCard onSend={(data) => handleSend('smart_city_simulation', data)} readyState={readyState} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <WeatherAlertCard onSend={(data) => handleSend('smart_city_simulation', data)} readyState={readyState} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <ParkingUpdateCard onSend={(data) => handleSend('smart_city_simulation', data)} readyState={readyState} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <SafetyInspectionCard onSend={(data) => handleSend('smart_city_simulation', data)} readyState={readyState} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}