{"ast":null,"code":"var _jsxFileName = \"/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/pages/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './HomePage.css';\nimport { useEventContext } from '../contexts/EventContext';\nimport AutonomousDrivingCard from '../components/AutonomousDrivingCard';\nimport ParkingUpdateCard from '../components/ParkingUpdateCard';\nimport SafetyInspectionCard from '../components/SafetyInspectionCard';\nimport WeatherAlertCard from '../components/WeatherAlertCard';\nimport InteractionHistory from '../components/InteractionHistory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const {\n    state,\n    sendAgentAction,\n    readyState,\n    clearEvents\n  } = useEventContext();\n  const {\n    events\n  } = state;\n  const [formData, setFormData] = useState({\n    autonomous_driving: {\n      start_location: 'A',\n      end_location: 'B',\n      passengers: 2\n    },\n    weather_alert: {\n      location: 'City Center',\n      alert_type: 'heavy_rain',\n      severity: 8\n    },\n    parking_update: {\n      location: 'Downtown Garage',\n      available_spots: 150\n    },\n    safety_inspection: {\n      location: 'Bridge B',\n      require_human_intervention: true\n    }\n  });\n  const generateReport = async () => {\n    console.log(\"Calling generateReport\");\n    const lastFiveEvents = events.slice(0, 5);\n    try {\n      const response = await fetch('/api/generate-report', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          events: lastFiveEvents\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n    } catch (error) {\n      console.error(\"Error generating report:\", error);\n    }\n  };\n  const handleSendAll = () => {\n    sendAgentAction('autonomous_driving', formData.autonomous_driving);\n    sendAgentAction('weather_alert', formData.weather_alert);\n    sendAgentAction('parking_update', formData.parking_update);\n    sendAgentAction('safety_inspection', formData.safety_inspection);\n  };\n  const handleFormUpdate = (form, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [form]: {\n        ...prev[form],\n        [field]: value\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"homepage__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"homepage__title\",\n        children: \"Agent Interaction Platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"homepage__subtitle\",\n        children: \"Monitor and control autonomous systems in real-time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"homepage__main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-grid\",\n        children: [/*#__PURE__*/_jsxDEV(AutonomousDrivingCard, {\n          data: formData.autonomous_driving,\n          onUpdate: e => handleFormUpdate('autonomous_driving', e.target.name, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherAlertCard, {\n          data: formData.weather_alert,\n          onUpdate: e => handleFormUpdate('weather_alert', e.target.name, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ParkingUpdateCard, {\n          data: formData.parking_update,\n          onUpdate: e => handleFormUpdate('parking_update', e.target.name, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SafetyInspectionCard, {\n          data: formData.safety_inspection,\n          onUpdate: e => handleFormUpdate('safety_inspection', e.target.name, e.target.type === 'checkbox' ? e.target.checked : e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InteractionHistory, {\n        events: events,\n        onClear: clearEvents,\n        onGenerateReport: generateReport,\n        onSendAll: handleSendAll,\n        readyState: readyState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"qVGBudNd3rhRceQkUcD0/PANSP4=\", false, function () {\n  return [useEventContext];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEventContext","AutonomousDrivingCard","ParkingUpdateCard","SafetyInspectionCard","WeatherAlertCard","InteractionHistory","jsxDEV","_jsxDEV","HomePage","_s","state","sendAgentAction","readyState","clearEvents","events","formData","setFormData","autonomous_driving","start_location","end_location","passengers","weather_alert","location","alert_type","severity","parking_update","available_spots","safety_inspection","require_human_intervention","generateReport","console","log","lastFiveEvents","slice","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","error","handleSendAll","handleFormUpdate","form","field","value","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","onUpdate","e","target","name","type","checked","onClear","onGenerateReport","onSendAll","_c","$RefreshReg$"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/pages/HomePage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './HomePage.css';\nimport { useEventContext } from '../contexts/EventContext';\nimport AutonomousDrivingCard from '../components/AutonomousDrivingCard';\nimport ParkingUpdateCard from '../components/ParkingUpdateCard';\nimport SafetyInspectionCard from '../components/SafetyInspectionCard';\nimport WeatherAlertCard from '../components/WeatherAlertCard';\nimport InteractionHistory from '../components/InteractionHistory';\n\nconst HomePage = () => {\n  const { state, sendAgentAction, readyState, clearEvents } = useEventContext();\n  const { events } = state;\n\n  const [formData, setFormData] = useState({\n    autonomous_driving: {\n      start_location: 'A',\n      end_location: 'B',\n      passengers: 2,\n    },\n    weather_alert: {\n      location: 'City Center',\n      alert_type: 'heavy_rain',\n      severity: 8,\n    },\n    parking_update: {\n      location: 'Downtown Garage',\n      available_spots: 150,\n    },\n    safety_inspection: {\n      location: 'Bridge B',\n      require_human_intervention: true,\n    },\n  });\n\n  const generateReport = async () => {\n    console.log(\"Calling generateReport\");\n    const lastFiveEvents = events.slice(0, 5);\n    try {\n      const response = await fetch('/api/generate-report', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ events: lastFiveEvents }),\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n    } catch (error) {\n      console.error(\"Error generating report:\", error);\n    }\n  };\n\n  const handleSendAll = () => {\n    sendAgentAction('autonomous_driving', formData.autonomous_driving);\n    sendAgentAction('weather_alert', formData.weather_alert);\n    sendAgentAction('parking_update', formData.parking_update);\n    sendAgentAction('safety_inspection', formData.safety_inspection);\n  };\n\n  const handleFormUpdate = (form, field, value) => {\n    setFormData((prev) => ({\n      ...prev,\n      [form]: {\n        ...prev[form],\n        [field]: value,\n      },\n    }));\n  };\n\n  return (\n    <div className=\"homepage\">\n      <header className=\"homepage__header\">\n        <h1 className=\"homepage__title\">Agent Interaction Platform</h1>\n        <p className=\"homepage__subtitle\">\n          Monitor and control autonomous systems in real-time\n        </p>\n      </header>\n      <main className=\"homepage__main\">\n        <div className=\"card-grid\">\n          <AutonomousDrivingCard\n            data={formData.autonomous_driving}\n            onUpdate={(e) =>\n              handleFormUpdate('autonomous_driving', e.target.name, e.target.value)\n            }\n          />\n          <WeatherAlertCard\n            data={formData.weather_alert}\n            onUpdate={(e) =>\n              handleFormUpdate('weather_alert', e.target.name, e.target.value)\n            }\n          />\n          <ParkingUpdateCard\n            data={formData.parking_update}\n            onUpdate={(e) =>\n              handleFormUpdate('parking_update', e.target.name, e.target.value)\n            }\n          />\n          <SafetyInspectionCard\n            data={formData.safety_inspection}\n            onUpdate={(e) =>\n              handleFormUpdate(\n                'safety_inspection',\n                e.target.name,\n                e.target.type === 'checkbox' ? e.target.checked : e.target.value\n              )\n            }\n          />\n        </div>\n        <InteractionHistory events={events} onClear={clearEvents} onGenerateReport={generateReport} onSendAll={handleSendAll} readyState={readyState} />\n      </main>\n    </div>\n  );\n};\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}