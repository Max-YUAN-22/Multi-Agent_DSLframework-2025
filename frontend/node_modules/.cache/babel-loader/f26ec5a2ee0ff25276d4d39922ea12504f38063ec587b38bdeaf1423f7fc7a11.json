{"ast":null,"code":"// 中文语言包\nexport const zh = {\n  // 系统状态\n  systemStatus: {\n    running: '系统运行中',\n    collaborating: '智能体协作',\n    ready: 'DSL引擎就绪'\n  },\n  // 区域标题\n  sections: {\n    agentArchitecture: '智能体架构',\n    taskPlanning: '任务规划',\n    executionReport: '执行报告',\n    functionControl: '功能控制',\n    interactionMonitoring: '交互监控',\n    subtitle: 'Multi-Agent DSL Framework - 智能体协作与DSL执行',\n    taskSubtitle: '任务输入、智能体选择、执行控制',\n    reportSubtitle: '实时监控、结果分析、性能报告'\n  },\n  // 智能体名称\n  agents: {\n    master: '城市管理主智能体',\n    autonomousDriving: '自动驾驶管理智能体',\n    trafficManager: '交通管理智能体',\n    weatherMonitor: '天气监测智能体',\n    parkingManager: '停车管理智能体',\n    safetyMonitor: '安全监测智能体',\n    emergencyServices: '紧急服务智能体',\n    lawEnforcement: '执法管理智能体',\n    sanitationManager: '环卫管理智能体',\n    irrigationManager: '灌溉管理智能体',\n    perceptionAgent: '感知智能体',\n    trafficIncidentAgent: '交通事件智能体',\n    rerouteAgent: '路径重规划智能体',\n    trafficMonitorAgent: '交通监控智能体'\n  },\n  // 智能体描述\n  agentDescriptions: {\n    autonomousDriving: '负责管理城市自动驾驶车辆，优化交通流量，确保行车安全。',\n    trafficManager: '智能交通信号控制，实时监测交通状况，优化交通流量。',\n    weatherMonitor: '实时监测天气变化，预测极端天气，发布预警信息。',\n    parkingManager: '智能停车管理，实时监测车位状态，提供停车引导服务。',\n    safetyMonitor: '全方位安全监控，识别潜在风险，及时响应安全事件。',\n    emergencyServices: '紧急医疗服务管理，快速响应医疗急救需求。',\n    lawEnforcement: '执法管理智能体，维护城市秩序，处理违法行为。',\n    sanitationManager: '智能环卫管理，监测垃圾状况，优化清洁作业。',\n    irrigationManager: '智能灌溉管理，监测土壤湿度，优化水资源利用。',\n    perceptionAgent: '环境感知智能体，监测城市环境变化，提供数据支持。',\n    trafficIncidentAgent: '交通事件处理智能体，快速响应交通事故，协调救援。',\n    rerouteAgent: '路径重规划智能体，动态调整交通路线，优化通行效率。',\n    trafficMonitorAgent: '交通监控智能体，实时监测交通状况，提供数据支持。'\n  },\n  // 智能体详细描述\n  agentDetails: {\n    autonomousDriving: '通过AI算法实时分析交通状况，为自动驾驶车辆提供最优路径规划，协调车辆间的交互，处理紧急情况。',\n    trafficManager: '通过传感器网络实时监测交通流量，动态调整信号灯时序，减少拥堵，提高通行效率。',\n    weatherMonitor: '整合多源气象数据，提供精准的天气预报，及时发布恶劣天气预警，协助其他智能体制定应对策略。',\n    parkingManager: '通过物联网传感器监测停车位使用情况，为驾驶员提供实时停车位信息和导航服务，优化停车资源利用。',\n    safetyMonitor: '通过视频监控、传感器网络等技术手段，实时监测城市安全状况，识别异常行为，快速响应安全事件。',\n    emergencyServices: '整合医疗资源，优化急救车辆调度，为紧急医疗事件提供快速响应和高效服务。',\n    lawEnforcement: '通过智能监控系统识别违法行为，协调执法资源，维护城市治安秩序。',\n    sanitationManager: '通过传感器监测垃圾桶状态，智能调度清洁车辆，优化环卫作业路线，保持城市环境整洁。',\n    irrigationManager: '监测土壤湿度和植物生长状况，智能控制灌溉系统，优化水资源利用效率。',\n    perceptionAgent: '通过多种传感器收集环境数据，实时监测城市环境变化，为其他智能体提供数据支持。',\n    trafficIncidentAgent: '快速识别交通事故，协调救援资源，优化事故处理流程，减少交通影响。',\n    rerouteAgent: '基于实时交通数据和历史模式，为车辆提供最优路径规划，动态调整路线以避开拥堵，提高交通效率。',\n    trafficMonitorAgent: '通过视频监控和传感器网络，实时监测交通状况，提供准确的交通数据和分析报告。'\n  },\n  // 功能控制\n  functionControl: {\n    title: '智能体功能展示',\n    multiAgentTitle: '多智能体协作',\n    singleAgentTitle: '单智能体功能',\n    selectedAgents: '已选择的智能体：',\n    startCollaboration: '启动智能协作',\n    sendMessage: '发送消息',\n    modeToggle: '多智能体',\n    modeToggleTooltip: '切换到多智能体协作模式'\n  },\n  // 交互监控\n  monitoring: {\n    interactionCount: '交互次数',\n    inProgress: '进行中',\n    completed: '已完成',\n    interactionHistory: '交互记录',\n    clearHistory: '清空记录'\n  },\n  // 智能体角色\n  roles: {\n    master: '城市管理主智能体',\n    autonomousDriving: '自动驾驶管理',\n    trafficManager: '交通流量管理',\n    weatherMonitor: '天气监测分析',\n    parkingManager: '停车资源管理',\n    safetyMonitor: '安全风险监控',\n    emergencyServices: '紧急响应服务',\n    lawEnforcement: '执法监督管理',\n    sanitationManager: '环卫清洁管理',\n    irrigationManager: '智能灌溉管理',\n    perceptionAgent: '环境感知分析',\n    trafficIncidentAgent: '交通事件处理',\n    rerouteAgent: '路径重规划',\n    trafficMonitorAgent: '交通监控分析'\n  },\n  // 按钮和操作\n  buttons: {\n    send: '发送',\n    clear: '清空',\n    start: '开始',\n    cancel: '取消',\n    confirm: '确认',\n    close: '关闭'\n  },\n  // 消息和提示\n  messages: {\n    selectAgent: '请选择智能体',\n    enterMessage: '请输入消息内容',\n    collaborationStarted: '多智能体协作已启动',\n    messageSent: '消息已发送',\n    historyCleared: '交互记录已清空'\n  },\n  // 任务规划\n  taskPlanning: {\n    inputTitle: '任务输入',\n    placeholder: '请输入要执行的任务，例如：优化城市交通流量，确保行车安全',\n    examples: '示例任务',\n    example1: '优化城市交通流量，确保行车安全',\n    example2: '处理紧急天气预警，启动应急响应',\n    example3: '协调停车资源，减少交通拥堵',\n    agentSelection: '智能体选择',\n    executeTask: '执行任务'\n  },\n  // 执行报告\n  report: {\n    summary: '执行摘要',\n    details: '详细报告',\n    completedTasks: '已完成任务',\n    activeAgents: '活跃智能体',\n    successRate: '成功率',\n    emptyTitle: '暂无执行记录',\n    emptyMessage: '执行任务后将显示详细的报告和分析结果'\n  },\n  // DSL相关\n  dsl: {\n    primitives: 'DSL原语',\n    execution: 'DSL执行',\n    workflow: '工作流程',\n    phase: '阶段',\n    participants: '参与者',\n    status: '状态',\n    timestamp: '时间戳'\n  }\n};","map":{"version":3,"names":["zh","systemStatus","running","collaborating","ready","sections","agentArchitecture","taskPlanning","executionReport","functionControl","interactionMonitoring","subtitle","taskSubtitle","reportSubtitle","agents","master","autonomousDriving","trafficManager","weatherMonitor","parkingManager","safetyMonitor","emergencyServices","lawEnforcement","sanitationManager","irrigationManager","perceptionAgent","trafficIncidentAgent","rerouteAgent","trafficMonitorAgent","agentDescriptions","agentDetails","title","multiAgentTitle","singleAgentTitle","selectedAgents","startCollaboration","sendMessage","modeToggle","modeToggleTooltip","monitoring","interactionCount","inProgress","completed","interactionHistory","clearHistory","roles","buttons","send","clear","start","cancel","confirm","close","messages","selectAgent","enterMessage","collaborationStarted","messageSent","historyCleared","inputTitle","placeholder","examples","example1","example2","example3","agentSelection","executeTask","report","summary","details","completedTasks","activeAgents","successRate","emptyTitle","emptyMessage","dsl","primitives","execution","workflow","phase","participants","status","timestamp"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/locales/zh.js"],"sourcesContent":["// 中文语言包\nexport const zh = {\n  // 系统状态\n  systemStatus: {\n    running: '系统运行中',\n    collaborating: '智能体协作',\n    ready: 'DSL引擎就绪'\n  },\n\n  // 区域标题\n  sections: {\n    agentArchitecture: '智能体架构',\n    taskPlanning: '任务规划',\n    executionReport: '执行报告',\n    functionControl: '功能控制',\n    interactionMonitoring: '交互监控',\n    subtitle: 'Multi-Agent DSL Framework - 智能体协作与DSL执行',\n    taskSubtitle: '任务输入、智能体选择、执行控制',\n    reportSubtitle: '实时监控、结果分析、性能报告'\n  },\n\n  // 智能体名称\n  agents: {\n    master: '城市管理主智能体',\n    autonomousDriving: '自动驾驶管理智能体',\n    trafficManager: '交通管理智能体',\n    weatherMonitor: '天气监测智能体',\n    parkingManager: '停车管理智能体',\n    safetyMonitor: '安全监测智能体',\n    emergencyServices: '紧急服务智能体',\n    lawEnforcement: '执法管理智能体',\n    sanitationManager: '环卫管理智能体',\n    irrigationManager: '灌溉管理智能体',\n    perceptionAgent: '感知智能体',\n    trafficIncidentAgent: '交通事件智能体',\n    rerouteAgent: '路径重规划智能体',\n    trafficMonitorAgent: '交通监控智能体'\n  },\n\n  // 智能体描述\n  agentDescriptions: {\n    autonomousDriving: '负责管理城市自动驾驶车辆，优化交通流量，确保行车安全。',\n    trafficManager: '智能交通信号控制，实时监测交通状况，优化交通流量。',\n    weatherMonitor: '实时监测天气变化，预测极端天气，发布预警信息。',\n    parkingManager: '智能停车管理，实时监测车位状态，提供停车引导服务。',\n    safetyMonitor: '全方位安全监控，识别潜在风险，及时响应安全事件。',\n    emergencyServices: '紧急医疗服务管理，快速响应医疗急救需求。',\n    lawEnforcement: '执法管理智能体，维护城市秩序，处理违法行为。',\n    sanitationManager: '智能环卫管理，监测垃圾状况，优化清洁作业。',\n    irrigationManager: '智能灌溉管理，监测土壤湿度，优化水资源利用。',\n    perceptionAgent: '环境感知智能体，监测城市环境变化，提供数据支持。',\n    trafficIncidentAgent: '交通事件处理智能体，快速响应交通事故，协调救援。',\n    rerouteAgent: '路径重规划智能体，动态调整交通路线，优化通行效率。',\n    trafficMonitorAgent: '交通监控智能体，实时监测交通状况，提供数据支持。'\n  },\n\n  // 智能体详细描述\n  agentDetails: {\n    autonomousDriving: '通过AI算法实时分析交通状况，为自动驾驶车辆提供最优路径规划，协调车辆间的交互，处理紧急情况。',\n    trafficManager: '通过传感器网络实时监测交通流量，动态调整信号灯时序，减少拥堵，提高通行效率。',\n    weatherMonitor: '整合多源气象数据，提供精准的天气预报，及时发布恶劣天气预警，协助其他智能体制定应对策略。',\n    parkingManager: '通过物联网传感器监测停车位使用情况，为驾驶员提供实时停车位信息和导航服务，优化停车资源利用。',\n    safetyMonitor: '通过视频监控、传感器网络等技术手段，实时监测城市安全状况，识别异常行为，快速响应安全事件。',\n    emergencyServices: '整合医疗资源，优化急救车辆调度，为紧急医疗事件提供快速响应和高效服务。',\n    lawEnforcement: '通过智能监控系统识别违法行为，协调执法资源，维护城市治安秩序。',\n    sanitationManager: '通过传感器监测垃圾桶状态，智能调度清洁车辆，优化环卫作业路线，保持城市环境整洁。',\n    irrigationManager: '监测土壤湿度和植物生长状况，智能控制灌溉系统，优化水资源利用效率。',\n    perceptionAgent: '通过多种传感器收集环境数据，实时监测城市环境变化，为其他智能体提供数据支持。',\n    trafficIncidentAgent: '快速识别交通事故，协调救援资源，优化事故处理流程，减少交通影响。',\n    rerouteAgent: '基于实时交通数据和历史模式，为车辆提供最优路径规划，动态调整路线以避开拥堵，提高交通效率。',\n    trafficMonitorAgent: '通过视频监控和传感器网络，实时监测交通状况，提供准确的交通数据和分析报告。'\n  },\n\n  // 功能控制\n  functionControl: {\n    title: '智能体功能展示',\n    multiAgentTitle: '多智能体协作',\n    singleAgentTitle: '单智能体功能',\n    selectedAgents: '已选择的智能体：',\n    startCollaboration: '启动智能协作',\n    sendMessage: '发送消息',\n    modeToggle: '多智能体',\n    modeToggleTooltip: '切换到多智能体协作模式'\n  },\n\n  // 交互监控\n  monitoring: {\n    interactionCount: '交互次数',\n    inProgress: '进行中',\n    completed: '已完成',\n    interactionHistory: '交互记录',\n    clearHistory: '清空记录'\n  },\n\n  // 智能体角色\n  roles: {\n    master: '城市管理主智能体',\n    autonomousDriving: '自动驾驶管理',\n    trafficManager: '交通流量管理',\n    weatherMonitor: '天气监测分析',\n    parkingManager: '停车资源管理',\n    safetyMonitor: '安全风险监控',\n    emergencyServices: '紧急响应服务',\n    lawEnforcement: '执法监督管理',\n    sanitationManager: '环卫清洁管理',\n    irrigationManager: '智能灌溉管理',\n    perceptionAgent: '环境感知分析',\n    trafficIncidentAgent: '交通事件处理',\n    rerouteAgent: '路径重规划',\n    trafficMonitorAgent: '交通监控分析'\n  },\n\n  // 按钮和操作\n  buttons: {\n    send: '发送',\n    clear: '清空',\n    start: '开始',\n    cancel: '取消',\n    confirm: '确认',\n    close: '关闭'\n  },\n\n  // 消息和提示\n  messages: {\n    selectAgent: '请选择智能体',\n    enterMessage: '请输入消息内容',\n    collaborationStarted: '多智能体协作已启动',\n    messageSent: '消息已发送',\n    historyCleared: '交互记录已清空'\n  },\n\n  // 任务规划\n  taskPlanning: {\n    inputTitle: '任务输入',\n    placeholder: '请输入要执行的任务，例如：优化城市交通流量，确保行车安全',\n    examples: '示例任务',\n    example1: '优化城市交通流量，确保行车安全',\n    example2: '处理紧急天气预警，启动应急响应',\n    example3: '协调停车资源，减少交通拥堵',\n    agentSelection: '智能体选择',\n    executeTask: '执行任务'\n  },\n\n  // 执行报告\n  report: {\n    summary: '执行摘要',\n    details: '详细报告',\n    completedTasks: '已完成任务',\n    activeAgents: '活跃智能体',\n    successRate: '成功率',\n    emptyTitle: '暂无执行记录',\n    emptyMessage: '执行任务后将显示详细的报告和分析结果'\n  },\n\n  // DSL相关\n  dsl: {\n    primitives: 'DSL原语',\n    execution: 'DSL执行',\n    workflow: '工作流程',\n    phase: '阶段',\n    participants: '参与者',\n    status: '状态',\n    timestamp: '时间戳'\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}