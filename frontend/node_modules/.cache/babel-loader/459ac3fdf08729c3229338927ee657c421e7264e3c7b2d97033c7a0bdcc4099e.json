{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nconst useWebSocket = (url, onMessage) => {\n  _s();\n  const socket = useRef(null);\n  useEffect(() => {\n    console.log('Attempting to connect to WebSocket at:', url);\n    socket.current = new WebSocket(url);\n    socket.current.onopen = () => {\n      console.log('WebSocket connected successfully');\n    };\n    socket.current.onmessage = event => {\n      try {\n        const message = JSON.parse(event.data);\n        console.log('WebSocket message received:', message);\n        onMessage(message);\n      } catch (error) {\n        console.error('Error parsing WebSocket message:', error);\n      }\n    };\n    socket.current.onclose = event => {\n      console.log('WebSocket disconnected:', event.code, event.reason);\n    };\n    socket.current.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    return () => {\n      if (socket.current) {\n        console.log('Closing WebSocket connection.');\n        socket.current.close();\n      }\n    };\n  }, [url, onMessage]);\n  return socket.current;\n};\n_s(useWebSocket, \"tT+TUeqDasSnJe6iF3dKYibtzxk=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useRef","useWebSocket","url","onMessage","_s","socket","console","log","current","WebSocket","onopen","onmessage","event","message","JSON","parse","data","error","onclose","code","reason","onerror","close"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nconst useWebSocket = (url, onMessage) => {\n  const socket = useRef(null);\n\n  useEffect(() => {\n    console.log('Attempting to connect to WebSocket at:', url);\n    socket.current = new WebSocket(url);\n\n    socket.current.onopen = () => {\n      console.log('WebSocket connected successfully');\n    };\n\n    socket.current.onmessage = (event) => {\n      try {\n        const message = JSON.parse(event.data);\n        console.log('WebSocket message received:', message);\n        onMessage(message);\n      } catch (error) {\n        console.error('Error parsing WebSocket message:', error);\n      }\n    };\n\n    socket.current.onclose = (event) => {\n      console.log('WebSocket disconnected:', event.code, event.reason);\n    };\n\n    socket.current.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    return () => {\n      if (socket.current) {\n        console.log('Closing WebSocket connection.');\n        socket.current.close();\n      }\n    };\n  }, [url, onMessage]);\n\n  return socket.current;\n};\n\nexport default useWebSocket;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,MAAMC,YAAY,GAAGA,CAACC,GAAG,EAAEC,SAAS,KAAK;EAAAC,EAAA;EACvC,MAAMC,MAAM,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACdO,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEL,GAAG,CAAC;IAC1DG,MAAM,CAACG,OAAO,GAAG,IAAIC,SAAS,CAACP,GAAG,CAAC;IAEnCG,MAAM,CAACG,OAAO,CAACE,MAAM,GAAG,MAAM;MAC5BJ,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD,CAAC;IAEDF,MAAM,CAACG,OAAO,CAACG,SAAS,GAAIC,KAAK,IAAK;MACpC,IAAI;QACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;QACtCV,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEM,OAAO,CAAC;QACnDV,SAAS,CAACU,OAAO,CAAC;MACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDZ,MAAM,CAACG,OAAO,CAACU,OAAO,GAAIN,KAAK,IAAK;MAClCN,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEK,KAAK,CAACO,IAAI,EAAEP,KAAK,CAACQ,MAAM,CAAC;IAClE,CAAC;IAEDf,MAAM,CAACG,OAAO,CAACa,OAAO,GAAIJ,KAAK,IAAK;MAClCX,OAAO,CAACW,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;IAED,OAAO,MAAM;MACX,IAAIZ,MAAM,CAACG,OAAO,EAAE;QAClBF,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC5CF,MAAM,CAACG,OAAO,CAACc,KAAK,CAAC,CAAC;MACxB;IACF,CAAC;EACH,CAAC,EAAE,CAACpB,GAAG,EAAEC,SAAS,CAAC,CAAC;EAEpB,OAAOE,MAAM,CAACG,OAAO;AACvB,CAAC;AAACJ,EAAA,CAtCIH,YAAY;AAwClB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}