{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nconst useWebSocket = (url, onMessage) => {\n  _s();\n  const socket = useRef(null);\n  const interval = useRef(null);\n  useEffect(() => {\n    socket.current = new WebSocket(url);\n    const sendPing = () => {\n      if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n        socket.current.send(JSON.stringify({\n          type: 'ping'\n        }));\n      }\n    };\n    socket.current.onopen = () => {\n      interval.current = setInterval(sendPing, 30000);\n    };\n    socket.current.onmessage = event => {\n      try {\n        const message = JSON.parse(event.data);\n        if (message.type === 'ping') {\n          if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n            socket.current.send(JSON.stringify({\n              type: 'pong'\n            }));\n          }\n        } else {\n          onMessage(message);\n        }\n      } catch (error) {\n        console.error('Error parsing WebSocket message:', error);\n      }\n    };\n    socket.current.onclose = event => {\n      console.log('WebSocket disconnected. Code:', event.code, 'Reason:', event.reason, 'Was Clean:', event.wasClean);\n      clearInterval(interval.current);\n    };\n    socket.current.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    return () => {\n      if (socket.current) {\n        socket.current.close();\n      }\n      clearInterval(interval.current);\n    };\n  }, [url, onMessage]);\n  const sendMessage = message => {\n    if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n      socket.current.send(JSON.stringify(message));\n    } else {\n      console.error('WebSocket is not connected.');\n    }\n  };\n  return {\n    sendMessage\n  };\n};\n_s(useWebSocket, \"8vShNuWTVPRAc+DpJtHdeYHBORA=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useRef","useWebSocket","url","onMessage","_s","socket","interval","current","WebSocket","sendPing","readyState","OPEN","send","JSON","stringify","type","onopen","setInterval","onmessage","event","message","parse","data","error","console","onclose","log","code","reason","wasClean","clearInterval","onerror","close","sendMessage"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nconst useWebSocket = (url, onMessage) => {\n  const socket = useRef(null);\n  const interval = useRef(null);\n\n  useEffect(() => {\n    socket.current = new WebSocket(url);\n\n    const sendPing = () => {\n      if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n        socket.current.send(JSON.stringify({ type: 'ping' }));\n      }\n    };\n\n    socket.current.onopen = () => {\n      interval.current = setInterval(sendPing, 30000);\n    };\n\n    socket.current.onmessage = (event) => {\n      try {\n        const message = JSON.parse(event.data);\n        if (message.type === 'ping') {\n          if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n            socket.current.send(JSON.stringify({ type: 'pong' }));\n          }\n        } else {\n          onMessage(message);\n        }\n      } catch (error) {\n        console.error('Error parsing WebSocket message:', error);\n      }\n    };\n\n    socket.current.onclose = (event) => {\n      console.log('WebSocket disconnected. Code:', event.code, 'Reason:', event.reason, 'Was Clean:', event.wasClean);\n      clearInterval(interval.current);\n    };\n\n    socket.current.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    return () => {\n      if (socket.current) {\n        socket.current.close();\n      }\n      clearInterval(interval.current);\n    };\n  }, [url, onMessage]);\n\n  const sendMessage = (message) => {\n    if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n      socket.current.send(JSON.stringify(message));\n    } else {\n      console.error('WebSocket is not connected.');\n    }\n  };\n\n  return { sendMessage };\n};\n\nexport default useWebSocket;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,MAAMC,YAAY,GAAGA,CAACC,GAAG,EAAEC,SAAS,KAAK;EAAAC,EAAA;EACvC,MAAMC,MAAM,GAAGL,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMM,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACdM,MAAM,CAACE,OAAO,GAAG,IAAIC,SAAS,CAACN,GAAG,CAAC;IAEnC,MAAMO,QAAQ,GAAGA,CAAA,KAAM;MACrB,IAAIJ,MAAM,CAACE,OAAO,IAAIF,MAAM,CAACE,OAAO,CAACG,UAAU,KAAKF,SAAS,CAACG,IAAI,EAAE;QAClEN,MAAM,CAACE,OAAO,CAACK,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC,CAAC,CAAC;MACvD;IACF,CAAC;IAEDV,MAAM,CAACE,OAAO,CAACS,MAAM,GAAG,MAAM;MAC5BV,QAAQ,CAACC,OAAO,GAAGU,WAAW,CAACR,QAAQ,EAAE,KAAK,CAAC;IACjD,CAAC;IAEDJ,MAAM,CAACE,OAAO,CAACW,SAAS,GAAIC,KAAK,IAAK;MACpC,IAAI;QACF,MAAMC,OAAO,GAAGP,IAAI,CAACQ,KAAK,CAACF,KAAK,CAACG,IAAI,CAAC;QACtC,IAAIF,OAAO,CAACL,IAAI,KAAK,MAAM,EAAE;UAC3B,IAAIV,MAAM,CAACE,OAAO,IAAIF,MAAM,CAACE,OAAO,CAACG,UAAU,KAAKF,SAAS,CAACG,IAAI,EAAE;YAClEN,MAAM,CAACE,OAAO,CAACK,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;cAAEC,IAAI,EAAE;YAAO,CAAC,CAAC,CAAC;UACvD;QACF,CAAC,MAAM;UACLZ,SAAS,CAACiB,OAAO,CAAC;QACpB;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDlB,MAAM,CAACE,OAAO,CAACkB,OAAO,GAAIN,KAAK,IAAK;MAClCK,OAAO,CAACE,GAAG,CAAC,+BAA+B,EAAEP,KAAK,CAACQ,IAAI,EAAE,SAAS,EAAER,KAAK,CAACS,MAAM,EAAE,YAAY,EAAET,KAAK,CAACU,QAAQ,CAAC;MAC/GC,aAAa,CAACxB,QAAQ,CAACC,OAAO,CAAC;IACjC,CAAC;IAEDF,MAAM,CAACE,OAAO,CAACwB,OAAO,GAAIR,KAAK,IAAK;MAClCC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;IAED,OAAO,MAAM;MACX,IAAIlB,MAAM,CAACE,OAAO,EAAE;QAClBF,MAAM,CAACE,OAAO,CAACyB,KAAK,CAAC,CAAC;MACxB;MACAF,aAAa,CAACxB,QAAQ,CAACC,OAAO,CAAC;IACjC,CAAC;EACH,CAAC,EAAE,CAACL,GAAG,EAAEC,SAAS,CAAC,CAAC;EAEpB,MAAM8B,WAAW,GAAIb,OAAO,IAAK;IAC/B,IAAIf,MAAM,CAACE,OAAO,IAAIF,MAAM,CAACE,OAAO,CAACG,UAAU,KAAKF,SAAS,CAACG,IAAI,EAAE;MAClEN,MAAM,CAACE,OAAO,CAACK,IAAI,CAACC,IAAI,CAACC,SAAS,CAACM,OAAO,CAAC,CAAC;IAC9C,CAAC,MAAM;MACLI,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;IAC9C;EACF,CAAC;EAED,OAAO;IAAEU;EAAY,CAAC;AACxB,CAAC;AAAC7B,EAAA,CA1DIH,YAAY;AA4DlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}