{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from 'react';\nconst useWebSocket = url => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [readyState, setReadyState] = useState(WebSocket.CLOSED);\n  const ws = useRef(null);\n  useEffect(() => {\n    const connect = () => {\n      ws.current = new WebSocket(url);\n      ws.current.onopen = () => {\n        console.log('WebSocket Connected');\n        setReadyState(WebSocket.OPEN);\n      };\n      ws.current.onmessage = event => {\n        const message = JSON.parse(event.data);\n        if (message.type === 'ping') {\n          ws.current.send(JSON.stringify({\n            type: 'pong'\n          }));\n        } else {\n          setMessages(prevMessages => [...prevMessages, message]);\n        }\n      };\n      ws.current.onclose = () => {\n        console.log('WebSocket Disconnected');\n        setReadyState(WebSocket.CLOSED);\n        // Attempt to reconnect after a delay\n        setTimeout(connect, 5000);\n      };\n      ws.current.onerror = error => {\n        console.error('WebSocket Error:', error);\n        setReadyState(WebSocket.CLOSED);\n      };\n    };\n    connect();\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, [url]);\n  const sendMessage = useCallback((type, data) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      const message = JSON.stringify({\n        type,\n        data\n      });\n      ws.current.send(message);\n    } else {\n      console.error('WebSocket is not connected.');\n    }\n  }, []);\n  const sendGenerateReport = useCallback(() => {\n    sendMessage('generate_report');\n  }, [sendMessage]);\n  const clearHistory = useCallback(() => {\n    setMessages([]);\n  }, []);\n  return {\n    messages,\n    readyState,\n    sendMessage,\n    sendGenerateReport,\n    clearHistory\n  };\n};\n_s(useWebSocket, \"XQrADjFLmwz3x/vs8KqRLLP/+WU=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","useWebSocket","url","_s","messages","setMessages","readyState","setReadyState","WebSocket","CLOSED","ws","connect","current","onopen","console","log","OPEN","onmessage","event","message","JSON","parse","data","type","send","stringify","prevMessages","onclose","setTimeout","onerror","error","close","sendMessage","sendGenerateReport","clearHistory"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\n\nconst useWebSocket = (url) => {\n  const [messages, setMessages] = useState([]);\n  const [readyState, setReadyState] = useState(WebSocket.CLOSED);\n  const ws = useRef(null);\n\n  useEffect(() => {\n    const connect = () => {\n      ws.current = new WebSocket(url);\n      ws.current.onopen = () => {\n        console.log('WebSocket Connected');\n        setReadyState(WebSocket.OPEN);\n      };\n\n      ws.current.onmessage = (event) => {\n        const message = JSON.parse(event.data);\n        if (message.type === 'ping') {\n          ws.current.send(JSON.stringify({ type: 'pong' }));\n        } else {\n          setMessages((prevMessages) => [...prevMessages, message]);\n        }\n      };\n\n      ws.current.onclose = () => {\n        console.log('WebSocket Disconnected');\n        setReadyState(WebSocket.CLOSED);\n        // Attempt to reconnect after a delay\n        setTimeout(connect, 5000);\n      };\n\n      ws.current.onerror = (error) => {\n        console.error('WebSocket Error:', error);\n        setReadyState(WebSocket.CLOSED);\n      };\n    };\n\n    connect();\n\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, [url]);\n\n  const sendMessage = useCallback((type, data) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      const message = JSON.stringify({ type, data });\n      ws.current.send(message);\n    } else {\n      console.error('WebSocket is not connected.');\n    }\n  }, []);\n\n  const sendGenerateReport = useCallback(() => {\n    sendMessage('generate_report');\n  }, [sendMessage]);\n\n  const clearHistory = useCallback(() => {\n    setMessages([]);\n  }, []);\n\n  return { messages, readyState, sendMessage, sendGenerateReport, clearHistory };\n};\n\nexport default useWebSocket;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}