{"ast":null,"code":"// DeepSeek API 配置\nexport const DEEPSEEK_CONFIG = {\n  // DeepSeek API 端点\n  API_URL: 'https://api.deepseek.com/v1/chat/completions',\n  // API 密钥 (实际使用时从环境变量获取)\n  API_KEY: process.env.REACT_APP_DEEPSEEK_API_KEY || 'your-deepseek-api-key-here',\n  // 模型配置\n  MODEL: 'deepseek-chat',\n  // 请求配置\n  REQUEST_CONFIG: {\n    temperature: 0.7,\n    max_tokens: 1000,\n    top_p: 0.9,\n    frequency_penalty: 0,\n    presence_penalty: 0\n  }\n};\n\n// 系统提示词\nexport const SYSTEM_PROMPT = `你是Multi-Agent DSL Platform的专业AI助手。你的任务是帮助用户解决关于多智能体系统、DSL原语、智能体协作等问题。\n\n平台功能包括：\n1. 多智能体协作：城市管理、交通管理、天气监测、停车管理等\n2. DSL原语：EVENT_ROUTE、LLM_DRIVE、SYSTEM_SCHEDULE、AGENT_COLLABORATE、CACHE_OPTIMIZE\n3. 实时监控：系统状态、性能指标、任务执行\n4. 企业级功能：用户管理、通知中心、设置面板\n\n请用专业、友好的语气回答用户问题，提供准确的技术指导。如果用户询问的问题不在平台功能范围内，请礼貌地引导用户到相关功能或建议联系技术支持。`;\n\n// DeepSeek API 调用函数\nexport const callDeepSeekAPI = async (userMessage, conversationHistory = []) => {\n  try {\n    const messages = [{\n      role: 'system',\n      content: SYSTEM_PROMPT\n    }, ...conversationHistory, {\n      role: 'user',\n      content: userMessage\n    }];\n    const response = await fetch(DEEPSEEK_CONFIG.API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${DEEPSEEK_CONFIG.API_KEY}`\n      },\n      body: JSON.stringify({\n        model: DEEPSEEK_CONFIG.MODEL,\n        messages: messages,\n        ...DEEPSEEK_CONFIG.REQUEST_CONFIG\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`API请求失败: ${response.status} ${response.statusText}`);\n    }\n    const data = await response.json();\n    if (data.choices && data.choices.length > 0) {\n      return data.choices[0].message.content;\n    } else {\n      throw new Error('API响应格式错误');\n    }\n  } catch (error) {\n    console.error('DeepSeek API调用失败:', error);\n    throw error;\n  }\n};\n\n// 模拟API调用（用于演示）\nexport const callDeepSeekAPIMock = async userMessage => {\n  // 模拟网络延迟\n  await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\n\n  // 根据用户消息内容提供相关响应\n  const responses = {\n    'dsl': \"DSL原语是系统的核心组件。EVENT_ROUTE用于事件路由，LLM_DRIVE用于AI驱动决策，SYSTEM_SCHEDULE用于任务调度，AGENT_COLLABORATE用于智能体协作，CACHE_OPTIMIZE用于缓存优化。\",\n    '智能体': \"多智能体协作需要确保所有智能体都处于活跃状态。您可以查看系统状态栏中的指标来监控智能体状态，包括CPU使用率、内存使用率等。\",\n    '性能': \"如果遇到性能问题，建议检查CACHE_OPTIMIZE原语的配置，它可以优化数据缓存和共享效率。同时监控系统指标，确保资源使用合理。\",\n    '错误': \"遇到错误时，请检查智能体配置、DSL原语使用是否正确。可以查看执行报告面板获取详细的错误信息和解决建议。\",\n    '默认': \"根据您的问题，我建议您检查智能体的配置和DSL原语的使用。EVENT_ROUTE原语用于事件路由，SYSTEM_SCHEDULE用于任务调度。如果问题持续存在，请联系技术支持团队。\"\n  };\n\n  // 根据关键词匹配响应\n  const lowerMessage = userMessage.toLowerCase();\n  for (const [keyword, response] of Object.entries(responses)) {\n    if (lowerMessage.includes(keyword)) {\n      return response;\n    }\n  }\n  return responses['默认'];\n};","map":{"version":3,"names":["DEEPSEEK_CONFIG","API_URL","API_KEY","process","env","REACT_APP_DEEPSEEK_API_KEY","MODEL","REQUEST_CONFIG","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","SYSTEM_PROMPT","callDeepSeekAPI","userMessage","conversationHistory","messages","role","content","response","fetch","method","headers","body","JSON","stringify","model","ok","Error","status","statusText","data","json","choices","length","message","error","console","callDeepSeekAPIMock","Promise","resolve","setTimeout","Math","random","responses","lowerMessage","toLowerCase","keyword","Object","entries","includes"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/config/deepseek.js"],"sourcesContent":["// DeepSeek API 配置\nexport const DEEPSEEK_CONFIG = {\n  // DeepSeek API 端点\n  API_URL: 'https://api.deepseek.com/v1/chat/completions',\n  \n  // API 密钥 (实际使用时从环境变量获取)\n  API_KEY: process.env.REACT_APP_DEEPSEEK_API_KEY || 'your-deepseek-api-key-here',\n  \n  // 模型配置\n  MODEL: 'deepseek-chat',\n  \n  // 请求配置\n  REQUEST_CONFIG: {\n    temperature: 0.7,\n    max_tokens: 1000,\n    top_p: 0.9,\n    frequency_penalty: 0,\n    presence_penalty: 0\n  }\n};\n\n// 系统提示词\nexport const SYSTEM_PROMPT = `你是Multi-Agent DSL Platform的专业AI助手。你的任务是帮助用户解决关于多智能体系统、DSL原语、智能体协作等问题。\n\n平台功能包括：\n1. 多智能体协作：城市管理、交通管理、天气监测、停车管理等\n2. DSL原语：EVENT_ROUTE、LLM_DRIVE、SYSTEM_SCHEDULE、AGENT_COLLABORATE、CACHE_OPTIMIZE\n3. 实时监控：系统状态、性能指标、任务执行\n4. 企业级功能：用户管理、通知中心、设置面板\n\n请用专业、友好的语气回答用户问题，提供准确的技术指导。如果用户询问的问题不在平台功能范围内，请礼貌地引导用户到相关功能或建议联系技术支持。`;\n\n// DeepSeek API 调用函数\nexport const callDeepSeekAPI = async (userMessage, conversationHistory = []) => {\n  try {\n    const messages = [\n      { role: 'system', content: SYSTEM_PROMPT },\n      ...conversationHistory,\n      { role: 'user', content: userMessage }\n    ];\n\n    const response = await fetch(DEEPSEEK_CONFIG.API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${DEEPSEEK_CONFIG.API_KEY}`\n      },\n      body: JSON.stringify({\n        model: DEEPSEEK_CONFIG.MODEL,\n        messages: messages,\n        ...DEEPSEEK_CONFIG.REQUEST_CONFIG\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error(`API请求失败: ${response.status} ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    \n    if (data.choices && data.choices.length > 0) {\n      return data.choices[0].message.content;\n    } else {\n      throw new Error('API响应格式错误');\n    }\n    \n  } catch (error) {\n    console.error('DeepSeek API调用失败:', error);\n    throw error;\n  }\n};\n\n// 模拟API调用（用于演示）\nexport const callDeepSeekAPIMock = async (userMessage) => {\n  // 模拟网络延迟\n  await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\n  \n  // 根据用户消息内容提供相关响应\n  const responses = {\n    'dsl': \"DSL原语是系统的核心组件。EVENT_ROUTE用于事件路由，LLM_DRIVE用于AI驱动决策，SYSTEM_SCHEDULE用于任务调度，AGENT_COLLABORATE用于智能体协作，CACHE_OPTIMIZE用于缓存优化。\",\n    '智能体': \"多智能体协作需要确保所有智能体都处于活跃状态。您可以查看系统状态栏中的指标来监控智能体状态，包括CPU使用率、内存使用率等。\",\n    '性能': \"如果遇到性能问题，建议检查CACHE_OPTIMIZE原语的配置，它可以优化数据缓存和共享效率。同时监控系统指标，确保资源使用合理。\",\n    '错误': \"遇到错误时，请检查智能体配置、DSL原语使用是否正确。可以查看执行报告面板获取详细的错误信息和解决建议。\",\n    '默认': \"根据您的问题，我建议您检查智能体的配置和DSL原语的使用。EVENT_ROUTE原语用于事件路由，SYSTEM_SCHEDULE用于任务调度。如果问题持续存在，请联系技术支持团队。\"\n  };\n  \n  // 根据关键词匹配响应\n  const lowerMessage = userMessage.toLowerCase();\n  for (const [keyword, response] of Object.entries(responses)) {\n    if (lowerMessage.includes(keyword)) {\n      return response;\n    }\n  }\n  \n  return responses['默认'];\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,eAAe,GAAG;EAC7B;EACAC,OAAO,EAAE,8CAA8C;EAEvD;EACAC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B,IAAI,4BAA4B;EAE/E;EACAC,KAAK,EAAE,eAAe;EAEtB;EACAC,cAAc,EAAE;IACdC,WAAW,EAAE,GAAG;IAChBC,UAAU,EAAE,IAAI;IAChBC,KAAK,EAAE,GAAG;IACVC,iBAAiB,EAAE,CAAC;IACpBC,gBAAgB,EAAE;EACpB;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;;AAEtE;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOC,WAAW,EAAEC,mBAAmB,GAAG,EAAE,KAAK;EAC9E,IAAI;IACF,MAAMC,QAAQ,GAAG,CACf;MAAEC,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAEN;IAAc,CAAC,EAC1C,GAAGG,mBAAmB,EACtB;MAAEE,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEJ;IAAY,CAAC,CACvC;IAED,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACrB,eAAe,CAACC,OAAO,EAAE;MACpDqB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUvB,eAAe,CAACE,OAAO;MACpD,CAAC;MACDsB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAE3B,eAAe,CAACM,KAAK;QAC5BW,QAAQ,EAAEA,QAAQ;QAClB,GAAGjB,eAAe,CAACO;MACrB,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACa,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,YAAYT,QAAQ,CAACU,MAAM,IAAIV,QAAQ,CAACW,UAAU,EAAE,CAAC;IACvE;IAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;IAElC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MAC3C,OAAOH,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACE,OAAO,CAACjB,OAAO;IACxC,CAAC,MAAM;MACL,MAAM,IAAIU,KAAK,CAAC,WAAW,CAAC;IAC9B;EAEF,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,mBAAmB,GAAG,MAAOxB,WAAW,IAAK;EACxD;EACA,MAAM,IAAIyB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,GAAGE,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;;EAE9E;EACA,MAAMC,SAAS,GAAG;IAChB,KAAK,EAAE,wHAAwH;IAC/H,KAAK,EAAE,gEAAgE;IACvE,IAAI,EAAE,oEAAoE;IAC1E,IAAI,EAAE,sDAAsD;IAC5D,IAAI,EAAE;EACR,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG/B,WAAW,CAACgC,WAAW,CAAC,CAAC;EAC9C,KAAK,MAAM,CAACC,OAAO,EAAE5B,QAAQ,CAAC,IAAI6B,MAAM,CAACC,OAAO,CAACL,SAAS,CAAC,EAAE;IAC3D,IAAIC,YAAY,CAACK,QAAQ,CAACH,OAAO,CAAC,EAAE;MAClC,OAAO5B,QAAQ;IACjB;EACF;EAEA,OAAOyB,SAAS,CAAC,IAAI,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}