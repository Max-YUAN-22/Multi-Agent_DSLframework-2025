{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nconst useWebSocket = (url, onMessage) => {\n  _s();\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = new WebSocket(url);\n    socket.current.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    socket.current.onmessage = event => {\n      try {\n        const message = JSON.parse(event.data);\n        onMessage(message);\n      } catch (error) {\n        console.error('Error parsing WebSocket message:', error);\n      }\n    };\n    socket.current.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n    socket.current.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    return () => {\n      if (socket.current) {\n        socket.current.close();\n      }\n    };\n  }, [url, onMessage]);\n  return socket.current;\n};\n_s(useWebSocket, \"tT+TUeqDasSnJe6iF3dKYibtzxk=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useRef","useWebSocket","url","onMessage","_s","socket","current","WebSocket","onopen","console","log","onmessage","event","message","JSON","parse","data","error","onclose","onerror","close"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nconst useWebSocket = (url, onMessage) => {\n  const socket = useRef(null);\n\n  useEffect(() => {\n    socket.current = new WebSocket(url);\n\n    socket.current.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    socket.current.onmessage = (event) => {\n      try {\n        const message = JSON.parse(event.data);\n        onMessage(message);\n      } catch (error) {\n        console.error('Error parsing WebSocket message:', error);\n      }\n    };\n\n    socket.current.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n\n    socket.current.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    return () => {\n      if (socket.current) {\n        socket.current.close();\n      }\n    };\n  }, [url, onMessage]);\n\n  return socket.current;\n};\n\nexport default useWebSocket;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,MAAMC,YAAY,GAAGA,CAACC,GAAG,EAAEC,SAAS,KAAK;EAAAC,EAAA;EACvC,MAAMC,MAAM,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACdM,MAAM,CAACC,OAAO,GAAG,IAAIC,SAAS,CAACL,GAAG,CAAC;IAEnCG,MAAM,CAACC,OAAO,CAACE,MAAM,GAAG,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC;IAEDL,MAAM,CAACC,OAAO,CAACK,SAAS,GAAIC,KAAK,IAAK;MACpC,IAAI;QACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;QACtCb,SAAS,CAACU,OAAO,CAAC;MACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDZ,MAAM,CAACC,OAAO,CAACY,OAAO,GAAG,MAAM;MAC7BT,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC,CAAC;IAEDL,MAAM,CAACC,OAAO,CAACa,OAAO,GAAIF,KAAK,IAAK;MAClCR,OAAO,CAACQ,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;IAED,OAAO,MAAM;MACX,IAAIZ,MAAM,CAACC,OAAO,EAAE;QAClBD,MAAM,CAACC,OAAO,CAACc,KAAK,CAAC,CAAC;MACxB;IACF,CAAC;EACH,CAAC,EAAE,CAAClB,GAAG,EAAEC,SAAS,CAAC,CAAC;EAEpB,OAAOE,MAAM,CAACC,OAAO;AACvB,CAAC;AAACF,EAAA,CAnCIH,YAAY;AAqClB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}