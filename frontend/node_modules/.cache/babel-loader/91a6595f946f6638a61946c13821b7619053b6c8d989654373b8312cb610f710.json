{"ast":null,"code":"import { io } from 'socket.io-client';\nclass WebSocketService {\n  constructor() {\n    this.socket = null;\n    this.onConnectCallback = null;\n    this.onDisconnectCallback = null;\n    this.onMessageCallback = null;\n    this.onErrorCallback = null;\n  }\n  connect(url) {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n\n    // Connect to the given URL with the correct path for the proxy\n    this.socket = io(url, {\n      path: '/ws/socket.io/',\n      // Ensure this path is handled by the proxy\n      transports: ['websocket', 'polling']\n    });\n    this.socket.on('connect', () => {\n      console.log('WebSocket connected');\n      if (this.onConnectCallback) {\n        this.onConnectCallback();\n      }\n    });\n    this.socket.on('disconnect', () => {\n      console.log('WebSocket disconnected');\n      if (this.onDisconnectCallback) {\n        this.onDisconnectCallback();\n      }\n    });\n    this.socket.on('message', data => {\n      console.log('Received message:', data);\n      if (this.onMessageCallback) {\n        this.onMessageCallback(data);\n      }\n    });\n    this.socket.on('connect_error', error => {\n      console.error('WebSocket connection error:', error);\n      if (this.onErrorCallback) {\n        this.onErrorCallback(error);\n      }\n    });\n  }\n  send(event, data) {\n    if (this.socket && this.socket.connected) {\n      this.socket.emit(event, data);\n    } else {\n      console.error('WebSocket is not connected.');\n    }\n  }\n  on(event, callback) {\n    switch (event) {\n      case 'connect':\n        this.onConnectCallback = callback;\n        break;\n      case 'disconnect':\n        this.onDisconnectCallback = callback;\n        break;\n      case 'message':\n        this.onMessageCallback = callback;\n        break;\n      case 'error':\n        this.onErrorCallback = callback;\n        break;\n      default:\n        console.error(`Unknown event: ${event}`);\n    }\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n}\nconst instance = new WebSocketService();\nexport default instance;","map":{"version":3,"names":["io","WebSocketService","constructor","socket","onConnectCallback","onDisconnectCallback","onMessageCallback","onErrorCallback","connect","url","disconnect","path","transports","on","console","log","data","error","send","event","connected","emit","callback","instance"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/components/WebSocketService.js"],"sourcesContent":["import { io } from 'socket.io-client';\n\nclass WebSocketService {\n  socket = null;\n  onConnectCallback = null;\n  onDisconnectCallback = null;\n  onMessageCallback = null;\n  onErrorCallback = null;\n\n  connect(url) {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n\n    // Connect to the given URL with the correct path for the proxy\n    this.socket = io(url, {\n      path: '/ws/socket.io/', // Ensure this path is handled by the proxy\n      transports: ['websocket', 'polling'],\n    });\n\n    this.socket.on('connect', () => {\n      console.log('WebSocket connected');\n      if (this.onConnectCallback) {\n        this.onConnectCallback();\n      }\n    });\n\n    this.socket.on('disconnect', () => {\n      console.log('WebSocket disconnected');\n      if (this.onDisconnectCallback) {\n        this.onDisconnectCallback();\n      }\n    });\n\n    this.socket.on('message', (data) => {\n      console.log('Received message:', data);\n      if (this.onMessageCallback) {\n        this.onMessageCallback(data);\n      }\n    });\n\n    this.socket.on('connect_error', (error) => {\n      console.error('WebSocket connection error:', error);\n      if (this.onErrorCallback) {\n        this.onErrorCallback(error);\n      }\n    });\n  }\n\n  send(event, data) {\n    if (this.socket && this.socket.connected) {\n      this.socket.emit(event, data);\n    } else {\n      console.error('WebSocket is not connected.');\n    }\n  }\n\n  on(event, callback) {\n    switch (event) {\n      case 'connect':\n        this.onConnectCallback = callback;\n        break;\n      case 'disconnect':\n        this.onDisconnectCallback = callback;\n        break;\n      case 'message':\n        this.onMessageCallback = callback;\n        break;\n      case 'error':\n        this.onErrorCallback = callback;\n        break;\n      default:\n        console.error(`Unknown event: ${event}`);\n    }\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n}\n\nconst instance = new WebSocketService();\nexport default instance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}