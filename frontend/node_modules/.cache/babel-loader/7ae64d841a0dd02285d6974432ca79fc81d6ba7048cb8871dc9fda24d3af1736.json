{"ast":null,"code":"var _jsxFileName = \"/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/pages/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grid, Paper } from '@mui/material';\nimport AutonomousDrivingCard from '../components/AutonomousDrivingCard';\nimport WeatherAlertCard from '../components/WeatherAlertCard';\nimport ParkingUpdateCard from '../components/ParkingUpdateCard';\nimport SafetyInspectionCard from '../components/SafetyInspectionCard';\nimport InteractionHistory from '../components/InteractionHistory';\nimport WebSocketService from '../components/WebSocketService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [readyState, setReadyState] = useState(WebSocket.CONNECTING);\n  useEffect(() => {\n    const wsUrl = `ws://localhost:${process.env.REACT_APP_BACKEND_PORT || 8006}`;\n    WebSocketService.connect(wsUrl);\n    const handleConnect = () => {\n      setReadyState(WebSocket.OPEN);\n    };\n    const handleDisconnect = () => {\n      setReadyState(WebSocket.CLOSED);\n    };\n    const handleMessage = data => {\n      try {\n        const message = JSON.parse(data);\n        setMessages(prevMessages => [...prevMessages, message]);\n      } catch (error) {\n        setMessages(prevMessages => [...prevMessages, {\n          type: 'raw',\n          data: data,\n          timestamp: new Date().toISOString()\n        }]);\n      }\n    };\n    WebSocketService.on('connect', handleConnect);\n    WebSocketService.on('disconnect', handleDisconnect);\n    WebSocketService.on('message', handleMessage);\n    return () => {\n      WebSocketService.disconnect();\n    };\n  }, []);\n  const handleSend = (task, data) => {\n    const message = {\n      type: 'smart_city_simulation',\n      data: {\n        ...data,\n        entry_point: task\n      }\n    };\n    WebSocketService.send(message);\n  };\n  const sendGenerateReport = () => {\n    const message = {\n      type: 'generate_report',\n      data: {}\n    };\n    WebSocketService.send(message);\n  };\n  const clearHistory = () => {\n    setMessages([]);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"k22ZdD4DFnKi1bAUnDwdwqqAFms=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","Paper","AutonomousDrivingCard","WeatherAlertCard","ParkingUpdateCard","SafetyInspectionCard","InteractionHistory","WebSocketService","jsxDEV","_jsxDEV","HomePage","_s","messages","setMessages","readyState","setReadyState","WebSocket","CONNECTING","wsUrl","process","env","REACT_APP_BACKEND_PORT","connect","handleConnect","OPEN","handleDisconnect","CLOSED","handleMessage","data","message","JSON","parse","prevMessages","error","type","timestamp","Date","toISOString","on","disconnect","handleSend","task","entry_point","send","sendGenerateReport","clearHistory","maxWidth","sx","mt","mb","children","container","spacing","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/pages/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Grid, Paper } from '@mui/material';\nimport AutonomousDrivingCard from '../components/AutonomousDrivingCard';\nimport WeatherAlertCard from '../components/WeatherAlertCard';\nimport ParkingUpdateCard from '../components/ParkingUpdateCard';\nimport SafetyInspectionCard from '../components/SafetyInspectionCard';\nimport InteractionHistory from '../components/InteractionHistory';\nimport WebSocketService from '../components/WebSocketService';\n\nconst HomePage = () => {\n  const [messages, setMessages] = useState([]);\n  const [readyState, setReadyState] = useState(WebSocket.CONNECTING);\n\n  useEffect(() => {\n    const wsUrl = `ws://localhost:${process.env.REACT_APP_BACKEND_PORT || 8006}`;\n    WebSocketService.connect(wsUrl);\n\n    const handleConnect = () => {\n      setReadyState(WebSocket.OPEN);\n    };\n\n    const handleDisconnect = () => {\n      setReadyState(WebSocket.CLOSED);\n    };\n\n    const handleMessage = (data) => {\n      try {\n        const message = JSON.parse(data);\n        setMessages((prevMessages) => [...prevMessages, message]);\n      } catch (error) {\n        setMessages((prevMessages) => [...prevMessages, { type: 'raw', data: data, timestamp: new Date().toISOString() }]);\n      }\n    };\n\n    WebSocketService.on('connect', handleConnect);\n    WebSocketService.on('disconnect', handleDisconnect);\n    WebSocketService.on('message', handleMessage);\n\n    return () => {\n      WebSocketService.disconnect();\n    };\n  }, []);\n\n  const handleSend = (task, data) => {\n    const message = {\n      type: 'smart_city_simulation',\n      data: { ...data, entry_point: task },\n    };\n    WebSocketService.send(message);\n  };\n\n  const sendGenerateReport = () => {\n    const message = {\n      type: 'generate_report',\n      data: {},\n    };\n    WebSocketService.send(message);\n  };\n\n  const clearHistory = () => {\n    setMessages([]);\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Grid container spacing={3}>\n        \n      </Grid>\n    </Container>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}