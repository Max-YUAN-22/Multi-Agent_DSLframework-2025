{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState, useCallback } from 'react';\nconst useWebSocket = (url, onMessage) => {\n  _s();\n  const ws = useRef(null);\n  const [readyState, setReadyState] = useState('connecting');\n  const handleMessage = useCallback(event => {\n    try {\n      const message = JSON.parse(event.data);\n      onMessage(message);\n    } catch (error) {\n      console.error('Failed to parse WebSocket message:', error);\n    }\n  }, [onMessage]);\n  useEffect(() => {\n    if (ws.current) {\n      return;\n    }\n    ws.current = new WebSocket(url);\n    setReadyState('connecting');\n    ws.current.onopen = () => {\n      setReadyState('open');\n    };\n    ws.current.onmessage = handleMessage;\n    ws.current.onclose = event => {\n      console.log('WebSocket disconnected:', event.reason);\n      setReadyState('closed');\n    };\n    ws.current.onerror = error => {\n      console.error('WebSocket connection error:', error);\n      setReadyState('closed');\n    };\n    return () => {\n      if (ws.current) {\n        console.log('Disconnecting WebSocket');\n        ws.current.close();\n        ws.current = null;\n      }\n    };\n  }, [url, handleMessage]);\n  const sendMessage = useCallback(message => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(message));\n    } else {\n      console.error('WebSocket is not connected.');\n    }\n  }, []);\n  return {\n    readyState,\n    sendMessage\n  };\n};\n_s(useWebSocket, \"cRCRkXu3ouPB17ygy8YCxCWX9cg=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useRef","useState","useCallback","useWebSocket","url","onMessage","_s","ws","readyState","setReadyState","handleMessage","event","message","JSON","parse","data","error","console","current","WebSocket","onopen","onmessage","onclose","log","reason","onerror","close","sendMessage","OPEN","send","stringify"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useRef, useState, useCallback } from 'react';\n\nconst useWebSocket = (url, onMessage) => {\n  const ws = useRef(null);\n  const [readyState, setReadyState] = useState('connecting');\n\n  const handleMessage = useCallback((event) => {\n    try {\n      const message = JSON.parse(event.data);\n      onMessage(message);\n    } catch (error) {\n      console.error('Failed to parse WebSocket message:', error);\n    }\n  }, [onMessage]);\n\n  useEffect(() => {\n    if (ws.current) {\n      return;\n    }\n\n    ws.current = new WebSocket(url);\n    setReadyState('connecting');\n\n    ws.current.onopen = () => {\n      setReadyState('open');\n    };\n\n    ws.current.onmessage = handleMessage;\n\n    ws.current.onclose = (event) => {\n      console.log('WebSocket disconnected:', event.reason);\n      setReadyState('closed');\n    };\n\n    ws.current.onerror = (error) => {\n      console.error('WebSocket connection error:', error);\n      setReadyState('closed');\n    };\n\n    return () => {\n      if (ws.current) {\n        console.log('Disconnecting WebSocket');\n        ws.current.close();\n        ws.current = null;\n      }\n    };\n  }, [url, handleMessage]);\n\n  const sendMessage = useCallback((message) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(message));\n    } else {\n      console.error('WebSocket is not connected.');\n    }\n  }, []);\n\n  return { readyState, sendMessage };\n};\n\nexport default useWebSocket;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAEhE,MAAMC,YAAY,GAAGA,CAACC,GAAG,EAAEC,SAAS,KAAK;EAAAC,EAAA;EACvC,MAAMC,EAAE,GAAGP,MAAM,CAAC,IAAI,CAAC;EACvB,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,YAAY,CAAC;EAE1D,MAAMS,aAAa,GAAGR,WAAW,CAAES,KAAK,IAAK;IAC3C,IAAI;MACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MACtCV,SAAS,CAACO,OAAO,CAAC;IACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC;EAEfN,SAAS,CAAC,MAAM;IACd,IAAIQ,EAAE,CAACW,OAAO,EAAE;MACd;IACF;IAEAX,EAAE,CAACW,OAAO,GAAG,IAAIC,SAAS,CAACf,GAAG,CAAC;IAC/BK,aAAa,CAAC,YAAY,CAAC;IAE3BF,EAAE,CAACW,OAAO,CAACE,MAAM,GAAG,MAAM;MACxBX,aAAa,CAAC,MAAM,CAAC;IACvB,CAAC;IAEDF,EAAE,CAACW,OAAO,CAACG,SAAS,GAAGX,aAAa;IAEpCH,EAAE,CAACW,OAAO,CAACI,OAAO,GAAIX,KAAK,IAAK;MAC9BM,OAAO,CAACM,GAAG,CAAC,yBAAyB,EAAEZ,KAAK,CAACa,MAAM,CAAC;MACpDf,aAAa,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEDF,EAAE,CAACW,OAAO,CAACO,OAAO,GAAIT,KAAK,IAAK;MAC9BC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDP,aAAa,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,OAAO,MAAM;MACX,IAAIF,EAAE,CAACW,OAAO,EAAE;QACdD,OAAO,CAACM,GAAG,CAAC,yBAAyB,CAAC;QACtChB,EAAE,CAACW,OAAO,CAACQ,KAAK,CAAC,CAAC;QAClBnB,EAAE,CAACW,OAAO,GAAG,IAAI;MACnB;IACF,CAAC;EACH,CAAC,EAAE,CAACd,GAAG,EAAEM,aAAa,CAAC,CAAC;EAExB,MAAMiB,WAAW,GAAGzB,WAAW,CAAEU,OAAO,IAAK;IAC3C,IAAIL,EAAE,CAACW,OAAO,IAAIX,EAAE,CAACW,OAAO,CAACV,UAAU,KAAKW,SAAS,CAACS,IAAI,EAAE;MAC1DrB,EAAE,CAACW,OAAO,CAACW,IAAI,CAAChB,IAAI,CAACiB,SAAS,CAAClB,OAAO,CAAC,CAAC;IAC1C,CAAC,MAAM;MACLK,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;IAC9C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAER,UAAU;IAAEmB;EAAY,CAAC;AACpC,CAAC;AAACrB,EAAA,CAvDIH,YAAY;AAyDlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}