{"ast":null,"code":"// frontend/src/components/WebSocketService.js\nimport io from 'socket.io-client';\nclass WebSocketService {\n  constructor() {\n    this.socket = null;\n    this.onConnectCallback = null;\n    this.onDisconnectCallback = null;\n    this.onMessageCallback = null;\n    this.onErrorCallback = null;\n    this.isConnected = false;\n  }\n  connect(url) {\n    console.log('üîå ËøûÊé•Âà∞:', url);\n    try {\n      // ‰ΩøÁî®ÁúüÊ≠£ÁöÑSocket.IOËøûÊé•\n      this.socket = io(url, {\n        transports: ['websocket', 'polling'],\n        timeout: 20000,\n        forceNew: true\n      });\n      this.socket.on('connect', () => {\n        console.log('‚úÖ WebSocketËøûÊé•ÊàêÂäü');\n        this.isConnected = true;\n        if (this.onConnectCallback) {\n          this.onConnectCallback();\n        }\n      });\n      this.socket.on('disconnect', reason => {\n        console.log('‚ùå WebSocketÊñ≠ÂºÄËøûÊé•:', reason);\n        this.isConnected = false;\n        if (this.onDisconnectCallback) {\n          this.onDisconnectCallback();\n        }\n      });\n      this.socket.on('connect_error', error => {\n        console.error('‚ùå WebSocketËøûÊé•ÈîôËØØ:', error);\n        if (this.onErrorCallback) {\n          this.onErrorCallback(error);\n        }\n      });\n\n      // ÁõëÂê¨ÊâÄÊúâÊ∂àÊÅØ\n      this.socket.onAny((eventName, ...args) => {\n        console.log('üì® Êî∂Âà∞Ê∂àÊÅØ:', eventName, args);\n        if (this.onMessageCallback) {\n          const message = args[0] || {};\n          this.onMessageCallback(message);\n        }\n      });\n\n      // ÁâπÂà´ÁõëÂê¨ÂπøÊí≠Ê∂àÊÅØ\n      this.socket.on('broadcast', data => {\n        console.log('üì° Êî∂Âà∞ÂπøÊí≠Ê∂àÊÅØ:', data);\n        if (this.onMessageCallback) {\n          this.onMessageCallback(data);\n        }\n      });\n    } catch (error) {\n      console.error('‚ùå WebSocketÂàùÂßãÂåñÂ§±Ë¥•:', error);\n      if (this.onErrorCallback) {\n        this.onErrorCallback(error);\n      }\n    }\n  }\n  send(event, data) {\n    if (!this.isConnected || !this.socket) {\n      console.error('‚ùå WebSocketÊú™ËøûÊé•');\n      return;\n    }\n    console.log('üì§ ÂèëÈÄÅÊ∂àÊÅØ:', {\n      event,\n      data\n    });\n    try {\n      this.socket.emit(event, data);\n    } catch (error) {\n      console.error('‚ùå ÂèëÈÄÅÊ∂àÊÅØÂ§±Ë¥•:', error);\n      if (this.onErrorCallback) {\n        this.onErrorCallback(error);\n      }\n    }\n  }\n  on(event, callback) {\n    switch (event) {\n      case 'connect':\n        this.onConnectCallback = callback;\n        break;\n      case 'disconnect':\n        this.onDisconnectCallback = callback;\n        break;\n      case 'message':\n        this.onMessageCallback = callback;\n        break;\n      case 'error':\n        this.onErrorCallback = callback;\n        break;\n      default:\n        console.error(`Unknown event: ${event}`);\n    }\n  }\n  disconnect() {\n    this.isConnected = false;\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n    if (this.onDisconnectCallback) {\n      this.onDisconnectCallback();\n    }\n  }\n}\nconst instance = new WebSocketService();\nexport default instance;","map":{"version":3,"names":["io","WebSocketService","constructor","socket","onConnectCallback","onDisconnectCallback","onMessageCallback","onErrorCallback","isConnected","connect","url","console","log","transports","timeout","forceNew","on","reason","error","onAny","eventName","args","message","data","send","event","emit","callback","disconnect","instance"],"sources":["/Users/Apple/Desktop/multi-agent-dsl-final/frontend/src/components/WebSocketService.js"],"sourcesContent":["// frontend/src/components/WebSocketService.js\nimport io from 'socket.io-client';\n\nclass WebSocketService {\n  socket = null;\n  onConnectCallback = null;\n  onDisconnectCallback = null;\n  onMessageCallback = null;\n  onErrorCallback = null;\n  isConnected = false;\n\n  connect(url) {\n    console.log('üîå ËøûÊé•Âà∞:', url);\n    \n    try {\n      // ‰ΩøÁî®ÁúüÊ≠£ÁöÑSocket.IOËøûÊé•\n      this.socket = io(url, {\n        transports: ['websocket', 'polling'],\n        timeout: 20000,\n        forceNew: true\n      });\n\n      this.socket.on('connect', () => {\n        console.log('‚úÖ WebSocketËøûÊé•ÊàêÂäü');\n        this.isConnected = true;\n        if (this.onConnectCallback) {\n          this.onConnectCallback();\n        }\n      });\n\n      this.socket.on('disconnect', (reason) => {\n        console.log('‚ùå WebSocketÊñ≠ÂºÄËøûÊé•:', reason);\n        this.isConnected = false;\n        if (this.onDisconnectCallback) {\n          this.onDisconnectCallback();\n        }\n      });\n\n      this.socket.on('connect_error', (error) => {\n        console.error('‚ùå WebSocketËøûÊé•ÈîôËØØ:', error);\n        if (this.onErrorCallback) {\n          this.onErrorCallback(error);\n        }\n      });\n\n      // ÁõëÂê¨ÊâÄÊúâÊ∂àÊÅØ\n      this.socket.onAny((eventName, ...args) => {\n        console.log('üì® Êî∂Âà∞Ê∂àÊÅØ:', eventName, args);\n        if (this.onMessageCallback) {\n          const message = args[0] || {};\n          this.onMessageCallback(message);\n        }\n      });\n\n      // ÁâπÂà´ÁõëÂê¨ÂπøÊí≠Ê∂àÊÅØ\n      this.socket.on('broadcast', (data) => {\n        console.log('üì° Êî∂Âà∞ÂπøÊí≠Ê∂àÊÅØ:', data);\n        if (this.onMessageCallback) {\n          this.onMessageCallback(data);\n        }\n      });\n\n    } catch (error) {\n      console.error('‚ùå WebSocketÂàùÂßãÂåñÂ§±Ë¥•:', error);\n      if (this.onErrorCallback) {\n        this.onErrorCallback(error);\n      }\n    }\n  }\n\n  send(event, data) {\n    if (!this.isConnected || !this.socket) {\n      console.error('‚ùå WebSocketÊú™ËøûÊé•');\n      return;\n    }\n\n    console.log('üì§ ÂèëÈÄÅÊ∂àÊÅØ:', { event, data });\n    \n    try {\n      this.socket.emit(event, data);\n    } catch (error) {\n      console.error('‚ùå ÂèëÈÄÅÊ∂àÊÅØÂ§±Ë¥•:', error);\n      if (this.onErrorCallback) {\n        this.onErrorCallback(error);\n      }\n    }\n  }\n\n  on(event, callback) {\n    switch (event) {\n      case 'connect':\n        this.onConnectCallback = callback;\n        break;\n      case 'disconnect':\n        this.onDisconnectCallback = callback;\n        break;\n      case 'message':\n        this.onMessageCallback = callback;\n        break;\n      case 'error':\n        this.onErrorCallback = callback;\n        break;\n      default:\n        console.error(`Unknown event: ${event}`);\n    }\n  }\n\n  disconnect() {\n    this.isConnected = false;\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n    if (this.onDisconnectCallback) {\n      this.onDisconnectCallback();\n    }\n  }\n}\n\nconst instance = new WebSocketService();\nexport default instance;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}