version: '3.8'

services:
  # Distributed Node 1 - Traffic and Safety Specialist
  node_1:
    image: python:3.9-slim
    container_name: dsl_node_1
    ports:
      - "8001:8001"
    environment:
      - NODE_ID=node_1
      - NODE_HOST=localhost
      - NODE_PORT=8001
      - CPU_CORES=4
      - MEMORY_GB=8
      - NETWORK_LATENCY_MS=10.0
      - BANDWIDTH_MBPS=1000.0
      - CAPABILITIES=traffic,safety
    volumes:
      - ./:/app
    working_dir: /app
    command: python3 scripts/distributed_node.py --node-id node_1 --port 8001
    networks:
      - dsl_network
    depends_on:
      - redis
      - postgres

  # Distributed Node 2 - Weather and Parking Specialist
  node_2:
    image: python:3.9-slim
    container_name: dsl_node_2
    ports:
      - "8002:8002"
    environment:
      - NODE_ID=node_2
      - NODE_HOST=localhost
      - NODE_PORT=8002
      - CPU_CORES=4
      - MEMORY_GB=8
      - NETWORK_LATENCY_MS=15.0
      - BANDWIDTH_MBPS=800.0
      - CAPABILITIES=weather,parking
    volumes:
      - ./:/app
    working_dir: /app
    command: python3 scripts/distributed_node.py --node-id node_2 --port 8002
    networks:
      - dsl_network
    depends_on:
      - redis
      - postgres

  # Distributed Node 3 - Traffic and Weather Specialist
  node_3:
    image: python:3.9-slim
    container_name: dsl_node_3
    ports:
      - "8003:8003"
    environment:
      - NODE_ID=node_3
      - NODE_HOST=localhost
      - NODE_PORT=8003
      - CPU_CORES=4
      - MEMORY_GB=8
      - NETWORK_LATENCY_MS=20.0
      - BANDWIDTH_MBPS=600.0
      - CAPABILITIES=traffic,weather
    volumes:
      - ./:/app
    working_dir: /app
    command: python3 scripts/distributed_node.py --node-id node_3 --port 8003
    networks:
      - dsl_network
    depends_on:
      - redis
      - postgres

  # Distributed Node 4 - Safety and Parking Specialist
  node_4:
    image: python:3.9-slim
    container_name: dsl_node_4
    ports:
      - "8004:8004"
    environment:
      - NODE_ID=node_4
      - NODE_HOST=localhost
      - NODE_PORT=8004
      - CPU_CORES=4
      - MEMORY_GB=8
      - NETWORK_LATENCY_MS=25.0
      - BANDWIDTH_MBPS=400.0
      - CAPABILITIES=safety,parking
    volumes:
      - ./:/app
    working_dir: /app
    command: python3 scripts/distributed_node.py --node-id node_4 --port 8004
    networks:
      - dsl_network
    depends_on:
      - redis
      - postgres

  # Redis for distributed caching
  redis:
    image: redis:7-alpine
    container_name: dsl_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dsl_network
    command: redis-server --appendonly yes

  # PostgreSQL for persistent storage
  postgres:
    image: postgres:15-alpine
    container_name: dsl_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=dsl_framework
      - POSTGRES_USER=dsl_user
      - POSTGRES_PASSWORD=dsl_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dsl_network

  # Load Balancer
  nginx:
    image: nginx:alpine
    container_name: dsl_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - dsl_network
    depends_on:
      - node_1
      - node_2
      - node_3
      - node_4

  # Monitoring and Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: dsl_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - dsl_network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: dsl_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - dsl_network

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  dsl_network:
    driver: bridge



